{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-ssj-30262-web-mapping-open-source-gis","title":"Welcome to SSJ 30262 Web Mapping &amp; Open Source GIS","text":"<p>Hi there! Welcome to my GitHub repository where I share my teaching material. I'm excited to have you here!</p>"},{"location":"#about-me","title":"About Me","text":"<p>I am a Visiting Assistant Professor(VAP) at Graduate School of Geography at Clark University. </p> <p>I received my Ph.D.(Geospatial Information Sciences) degree from the Department of Geospatial Information Sciences at the University of Texas at Dallas (\u5fb7\u5dde\u5927\u5b66\u8fbe\u62c9\u65af\u5206\u6821).</p>"},{"location":"#education","title":"Education","text":"<ul> <li>2019\u20132024 \u2003 Ph.D. in Geospatial Information Sciences. University of Texas at Dallas, Texas, USA</li> <li>2017\u20132019 \u2003 M.A. in Geography. Binghamton University (SUNY), New York, USA</li> <li>2012\u20132016 \u2003 B.S. in  Resource Environment and Urban-Rural Planning Management. Xi\u2019an University of Science and Technology, China</li> </ul>"},{"location":"#teaching","title":"Teaching","text":"<ul> <li>2025 \u2003  SSJ 376 Spatial Database DVLP in PRAC - Clark University</li> <li>2025 \u2003  GEOG 386 Sptial Topics: Python Programming - Clark University</li> <li>2025 \u2003  GEOG 247 Intermediate Quantitative Methods in GEOG - Clark University</li> <li>2024 \u2003  SSJ 30262 Web Mapping &amp; Open Source GIS - Clark University</li> <li>2024  \u2003 SSJ 302 Python Programming &amp; SSJ 30274 Computer PROG for GIS - Clark University</li> <li>2022  \u2003 Principles of Geospatial Information Sciences - The University of Texas at Dallas</li> <li>2021  \u2003 Methods of Quantitative Analysis in the Social and Policy Science - The University of Texas at Dallas</li> </ul>"},{"location":"Content/syllabus/","title":"Syllabus Fall 2024","text":""},{"location":"Demo/Week01_Intro_to_GitHub/","title":"Week 1 Intro to GitHub","text":"&amp;nbsp &amp;nbsp  <p>A repository (or 'repo' for short) on GitHub is essentially a storage space where your project's files, including code, documentation, and other resources, are stored.</p> <p>More detail about Repository find in GitHub Docs</p> <p></p> <p>You can use Source Control in VS Code to update content in Github</p>"},{"location":"Demo/Week01_Intro_to_GitHub/#Sign-up-the-GitHub-Account","title":"Sign up the GitHub Account\u00b6","text":"<ul> <li>Create a GitHub Account (highly recommend use University email)</li> <li>Include a personal email as back-up email</li> <li>A domain name is a unique URL address that points users to your website.</li> <li>GitHub Pages will provide us a domain name at yourusername.github.io.</li> </ul>"},{"location":"Demo/Week01_Intro_to_GitHub/#Repository-in-GitHub","title":"Repository in GitHub\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#Customize-profile","title":"Customize profile\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#Create-new-repo","title":"Create new repo\u00b6","text":"<p>Click + on the top right corner</p> <p></p> <p>Make sure your repo name is the same as your user name</p> <p></p> <p>Set is as Public and Select 'Add a README file'</p> <p></p> <p>GitHub will display your profile README on your profile page if all of the following are true.</p> <ul> <li>You've created a repository with a name that matches your GitHub username.</li> <li>The repository is public.</li> <li>The repository contains a file named README.md in its root.</li> <li>The README.md file contains any content.</li> </ul> <p>More details</p>"},{"location":"Demo/Week01_Intro_to_GitHub/#Small-Tricks-to-polish-profile","title":"Small Tricks to polish profile\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#Emoji","title":"Emoji\u00b6","text":"<p>Copy emojis and paste them in file</p> <p></p>"},{"location":"Demo/Week01_Intro_to_GitHub/#Static-Bage","title":"Static Bage\u00b6","text":"<p>'any_text', 'you_like' and 'blue' are user-defined Modify Static Bage per you needed</p> <p>For example  is defined as https://img.shields.io/badge/My-LinkedIn-blue</p> <p>Format that create a LinkedIn badge that connect to your associated account</p> <ul> <li>[![Alt text](link of badge)](link to content)</li> </ul> <p>Copy below code to file then you will see a badge tha connect to you relevent account</p> <ul> <li></li> </ul>"},{"location":"Demo/Week01_Intro_to_GitHub/#Dynamic-badges","title":"Dynamic badges\u00b6","text":"<p>Dynamic badges can show metrics for your repo or project.</p>"},{"location":"Demo/Week01_Intro_to_GitHub/#Hash-tag-control-the-font-size","title":"Hash tag control the font size\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#Insert-Hyperlink-for-words-or-sentence","title":"Insert Hyperlink for words or sentence\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#_-for-bold-text","title":"_ for bold text\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#Get-good-design-from-others-README-file","title":"Get good design from others README file\u00b6","text":"<p>If you are interested in others design about README file, you can folk repository to edit it.</p>"},{"location":"Demo/Week01_Intro_to_GitHub/#More-about-GitHub","title":"More about GitHub\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#Modify-Setting","title":"Modify Setting\u00b6","text":"<p>Go to the Repo, select '' in About section</p> <p></p> <p>Modify Description, add url of Website, and add topics. Then save changes</p> <ul> <li>Topics in About section is clickable, click 'Python' to see the all repo that related to this topic! (This function is similar to # in Twitter)</li> </ul> <p> </p>"},{"location":"Demo/Week01_Intro_to_GitHub/#Top-Tabs","title":"Top Tabs\u00b6","text":"<ul> <li>Issues: Report issue about this repo (e.g., code error)</li> <li>Discussions: ask question or provide comments for the repo (You can hide or show disscussion through change setting in Settings)<ul> <li>You can insert image, code in the Discussio</li> </ul> </li> <li>Action: show change in the repo</li> <li>Insights: Metrics (e.g., how many people visit your ) about your repo; Referrring sites; Popular content</li> </ul>"},{"location":"Demo/Week01_Intro_to_GitHub/#Install-VS-code","title":"Install VS code\u00b6","text":"<p>Download link</p>"},{"location":"Demo/Week01_Intro_to_GitHub/#Git","title":"Git\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#1.-Install","title":"1. Install\u00b6","text":"<p>Go to the Git website to download the installer for your operation system</p>"},{"location":"Demo/Week01_Intro_to_GitHub/#2.-Set-up-account-name-and-email-address","title":"2. Set up account name and email address\u00b6","text":"<p>Set up your account name and email address in Git</p> <p>The account name can be anyname, Git doesn't care. it just need to know to whom to credit commits and future projects.</p> <pre>git config --global user.name \"Double\"\n</pre> <ul> <li>More information pelease find here Setting your username in Git</li> </ul> <p>Use the sign-up email of your GitHub Account</p> <pre>git config --global user.email \"GitHub_Sign_Up_EmailL\"\n</pre> <ul> <li>More information please find here Setting your commit email address</li> </ul> <p>Check your account name and email</p> <pre>git config --global --list\n</pre>"},{"location":"Demo/Week01_Intro_to_GitHub/#3.-Connect-remote-repository-to-local-repository","title":"3. Connect remote repository to local repository\u00b6","text":"<p>when you first time use Git, it requres you to log in your GitHub account</p> <p></p>"},{"location":"Demo/Week01_Intro_to_GitHub/#3.1-Clone-a-remote-repository-to-local-computer","title":"3.1 Clone a remote repository to local computer\u00b6","text":"<pre>git clone &lt;repository_url&gt;\n</pre>"},{"location":"Demo/Week01_Intro_to_GitHub/#3.2-Make-some-change-to-local-repository,-then-update-the-remote-pository-based-on-Step-1---3.","title":"3.2 Make some change to local repository, then update the remote pository based on Step 1 - 3.\u00b6","text":"<ol> <li>To add files to the staging area, run the following command:</li> </ol> <pre>git add .\n</pre> <ol> <li>To commit the changes, run the following command. Repalce message with your comment to this commit</li> </ol> <pre>git commit -m 'message'\n</pre> <ol> <li>Push the change from local repository to remote repository</li> </ol> <pre>git push\n</pre>"},{"location":"Demo/Week01_Intro_to_GitHub/#3.3-Update-local-repository-based-on-remote-repository","title":"3.3 Update local repository based on remote repository\u00b6","text":"<pre>git pull\n</pre> <p>Git cheat sheet</p>"},{"location":"Demo/Week01_Intro_to_GitHub/#4.-Update-Github-in-VS-Code","title":"4. Update Github in VS Code\u00b6","text":""},{"location":"Demo/Week01_Intro_to_GitHub/#5.-Troubleshooting","title":"5. Troubleshooting\u00b6","text":"<p>5.1 Token issue</p> <p>Error message: Remote: invalid username or password fatal: Authentication failed</p> <p>Solution:</p> <ol> <li>click your profile photo, then click Settings.</li> <li>Navigate to Developer settings &gt; Personal access tokens &gt; Tokens (classic) &gt; Generate new token &gt; Generate new token classic</li> <li>In the Note field, assign a name to this token</li> <li>In the Expiration field, set an expiration date for this token. In this example, I set it for 90 days</li> <li>From the scopes menu, select all options. This will allow you to edit your repo</li> </ol> <p></p> <ol> <li>Click Generate token at the bottom of the page</li> <li>Copy the generated token as it won't be shown again and temporatily same the token before closing the window</li> </ol> <p></p> <ol> <li>Changing a remote repository's URL</li> </ol> <p>Replace  with the token you just copied</p> <p>Replace USERNAME with your GitHub username</p> <p>Replace REPO with the name of your GitHub Repo</p> <pre>git remote set-url origin git remote set-url origin https://&lt;your-token&gt;@github.com/USERNAME/REPO.git\n</pre> <p>Special thanks to Tanner Honnef for contributing this solution!</p>"},{"location":"Demo/Week02_HTML/","title":"Week 2 Demo","text":"&amp;nbsp &amp;nbsp  <ol> <li>Make connections between main page and side page of your personal website</li> </ol> <ul> <li><p>Main page: The homepage that includes links to all the side pages (e.g., project, research)</p> </li> <li><p>Side pages: Side page contain the specific content for the topics</p> </li> </ul> <p>1.1 Create a new html in your personal website repo (e.g., named 'projects.html')</p> <p>1.2 Insert projects.html to main page</p> <p><code>&lt;a href=\"projects.html\"&gt;&lt;/a&gt;</code></p> <ol> <li>Insert Contact ME section</li> </ol> <ul> <li>Google Forms</li> </ul> <ol> <li><p>Create a New Form in google forms</p> </li> <li><p>Design your form</p> </li> <li><p>Get the embed code</p> </li> </ol> <p>Click the 'Send' button at the top right</p> <p>Select the \"&lt;&gt;\" (Embed) option</p> <p>Copy the HTML iframe code provided</p> <ol> <li>Insert the embed code into the HTML where you want the form to appear</li> </ol>"},{"location":"Demo/Week03_CSS/","title":"Week03 CSS","text":"In\u00a0[\u00a0]: Copied! <pre>## Cascading Style Sheets\n</pre> ## Cascading Style Sheets Exercise 1: Add Interval CSS based on element <ol> <li>Add internal css for <code>&lt;p&gt;</code></li> <li>Add internal css for <code>&lt;h1&gt;</code> or other heading</li> </ol> Exercise 2: Add Interval CSS based on id <p>Step 1: add the id for a element</p> <p><code>&lt;p id=\"intro\"&gt;Hello World!&lt;/p&gt;</code></p> <p>Step 2: write a hash (#) then followed by an id name and define the CSS within curly braces {}</p> <p><code>&lt;style&gt;#intro{text-align: center;color: red;}&lt;/style&gt;</code></p> Exercise 3: Add Internal CSS based on class 1. Add internal css for elements with same class 2. Add internal css for specific elements with specific class   Exercise 4: Test priority of inline and internal style 1. Create inline style and internal style for same element to see the difference   Exercise 5: Beautify navigation links Exercise 6: Beautify Intro section (margin, padding, border) <ul> <li><p>set up your div into left or right</p> <ul> <li>float: left;</li> </ul> </li> <li><p>set up margin, or padding, or border for your different section</p> <ul> <li>margin-left: 200px;</li> <li>margin-top: 100px;</li> <li>margin-right: 200px;</li> </ul> </li> </ul> Exercise 7: Beautify li section (margin, padding, border) <ul> <li><p>Add class in <code>ul</code> first then you can specify the attribute for all <code>li</code> under <code>ul</code></p> <ul> <li>font-size: 20px;</li> <li>font-family: 'Times New Roman', Times, serif;</li> <li>line-height: 25px;</li> </ul> </li> </ul> Exercise 8: Beautify Figure (margin, padding, border) <ul> <li>Figure is special because it contain two parts, one is img and one is Figureshare</li> <li>Modify the image size</li> </ul> <p></p> <ul> <li><p>Create three figures</p> </li> <li><p>Place three Figures in a line horizontally</p> <ul> <li>display: flex;</li> <li>justify-content: center;</li> <li>gap: 250px;</li> </ul> </li> </ul> <p></p> Exercise 9: Beautify Footer <p>9.1 Add the extra information to to footer</p> <ul> <li>like address, copyright</li> </ul> <p>9.2 Add Contact Me Section</p> <p></p> <p>9.2 Set up margin, padding or border to each element</p> <ul> <li>You can make the border as solid to help you adjust the margin, padding or border</li> </ul>"},{"location":"Demo/Week03_CSS/#CSS-Syntax","title":"CSS Syntax\u00b6","text":"<ul> <li>Selection: HTML element you want to style</li> <li>Declaration: includes a property name and a value, separated by a colon; one of more declarations separated by semicolons</li> </ul>"},{"location":"Demo/Week03_CSS/#Ways-to-use-CSS","title":"Ways to use CSS\u00b6","text":"<ul> <li>Inline: using the style attribute inside HTML elements</li> <li>Internal: using the style element in the head sectio</li> <li>External: using a link element to an external CSS file</li> </ul>"},{"location":"Demo/Week03_CSS/#Inline-CSS","title":"Inline CSS\u00b6","text":"<p><code>&lt;h1 style=\"color:blue;font-size: 30px\"&gt;Introduction&lt;/h1&gt;</code></p>"},{"location":"Demo/Week03_CSS/#Internal-CSS","title":"Internal CSS\u00b6","text":"<ul> <li>Internal CSS is used to define a style for a single html page.</li> <li>An internal CSS is defined in the <code>&lt;head&gt;</code> section of an HTML page, within a <code>&lt;style&gt;</code> element</li> </ul> <p>Example: see the text color, font size and font for ALL  the <code>&lt;h1&gt;</code> elements</p> <p></p>"},{"location":"Demo/Week03_CSS/#Internal-CSS:-Selector","title":"Internal CSS: Selector\u00b6","text":"<p>For an internal CSS, we have severl ways to specify the selector.</p>"},{"location":"Demo/Week03_CSS/#element-name-selector","title":"element name selector\u00b6","text":"<p><code>p {text-align: center; color: red;}</code></p>"},{"location":"Demo/Week03_CSS/#id-selector","title":"id selector\u00b6","text":"<ul> <li><code>id</code> is used to specify a unique id for an HTML element and must be unique within the HTML document.</li> <li>The <code>id</code> of an element is better to be unique within a page</li> <li>You can have multiple element with same <code>id</code> but functions will only return the first matching element</li> </ul>"},{"location":"Demo/Week03_CSS/#class-selector","title":"class selector\u00b6","text":"<ul> <li>Class is used to specify a class for an HTML element</li> <li>Multiple HTML elements can share the same class</li> </ul> <p>In the below example, all HTML elements with class \"intro\" will be red and center-aligned</p> <p><code>.center { text-align: center; color: red; }</code></p> <p>In the below example, only <code>p</code> element with class = <code>\"center\"</code> will be red and center-aligned</p> <p><code>p.center { text-align: center;color: red;}</code></p>"},{"location":"Demo/Week03_CSS/#Cascading-order-for-Inline,-Internal-and-External-style-sheets","title":"Cascading order for Inline, Internal and External style sheets\u00b6","text":"<p>The priority is highest to lowest from 1 to 3</p> <ol> <li>Inline style</li> <li>Internal style</li> <li>External style</li> </ol> <p>So, an inline style will override external and internal styles.</p>"},{"location":"Demo/Week03_CSS/#Attributes-for-li-tag","title":"Attributes for li tag\u00b6","text":"<ul> <li>list-style: none;</li> <li>display: inline-block;</li> <li>line-height: 2;</li> <li>margin-right: 50px;</li> </ul>"},{"location":"Demo/Week03_CSS/#Attributes-for-a-tag","title":"Attributes for a tag\u00b6","text":"<ul> <li>font-size: 30px;</li> <li>color: rgb(104, 104, 215);</li> </ul>"},{"location":"Demo/Week03_CSS/#Attribute-for-hover-effect-in-a-tag","title":"Attribute for hover effect in a tag\u00b6","text":""},{"location":"Demo/Week03_CSS/#Attributes-for-nav-tag","title":"Attributes for nav tag\u00b6","text":"<ul> <li>justify-content: flex-end;</li> <li>display: flex;</li> </ul>"},{"location":"Demo/Week03_CSS/#Margin,-border-and-padding","title":"Margin, border and padding\u00b6","text":""},{"location":"Demo/Week03_CSS/#Margin-property","title":"Margin property\u00b6","text":"<ul> <li><p>margin: 25px 50px 75px 100px</p> </li> <li><p>padding: 25px 50px 75px 100px</p> <ul> <li>top margin is 25 px</li> <li>right margin is 50 px</li> <li>bottom margin is 75 px</li> <li>left margin is 100px</li> </ul> </li> <li><p>border</p> </li> </ul>"},{"location":"Labs/Lab01/","title":"Lab 01","text":"&amp;nbsp &amp;nbsp  Lab 01: Github Personal Website <ul> <li><p>This lab accomplish two goals.</p> <ul> <li>To provide the website template to use for your final project</li> <li>To Provide the URL of README. file in your Github</li> </ul> </li> <li><p>Save the URL in .ipynb file, ensuring that the link is clikable. Then export the file as HTML or PDF file. Submit the HTML or PEF file to Canvas by midnight (11:29 PM) on September 8.</p> </li> <li><p>This lab is worth a total of 50 points and contributes 5% toward the final grade.</p> </li> </ul>"},{"location":"Labs/Lab01/#1.-Provide-the-URL-of-your-Github","title":"1. Provide the URL of your Github\u00b6","text":"<p>If I click into it, it will show your README file (cover page) of your Github (25 points)</p> <p>Example: My Github</p>"},{"location":"Labs/Lab01/#2.-Provide-the-URL-of-your-personal-website","title":"2. Provide the URL of your personal website\u00b6","text":"<p>If I click into it, it will show your personal website instead of Repository in Github (25 points)</p>"},{"location":"Labs/Lab02/","title":"Lab 02","text":"&amp;nbsp &amp;nbsp  Lab 02: HTML Elements <ul> <li><p>This lab accomplish two goals.</p> <ul> <li>Put your newly acquired HTML skills to use</li> </ul> </li> <li><p>Save the URL in .ipynb file, ensuring that the link is clikable. Then export the file as HTML or PDF file. Submit the HTML or PEF file to Canvas by midnight (11:29 PM) on September 15.</p> </li> <li><p>This lab is worth a total of 65 points and contributes 6.5% toward the final grade.</p> </li> </ul> <ol> <li>Show 3 elements from heading, paragraph, image, figure, div, footer,navigation  (20 points)</li> </ol> <p></p> <ol> <li>Show the example hyperlink, and your hyperlink should be clickable in your personal website (20 points)</li> </ol> <ol> <li>Show nagivation bar (your navigation bar should connect to the corresponding section in your personal website) (20 points)</li> </ol> <ol> <li>URL of your personal website (5 points)</li> </ol>"},{"location":"Labs/Lab03/","title":"Lab 03","text":"&amp;nbsp &amp;nbsp  Lab 03: CSS <ul> <li><p>This lab accomplish two goals.</p> <ul> <li>Put your newly acquired CSS skills to use</li> </ul> </li> <li><p>Save the URL in .ipynb file, ensuring that the link is clikable. Then export the file as HTML or PDF file. Submit the HTML or PEF file to Canvas by midnight (11:29 PM) on September 22.</p> </li> <li><p>This lab is worth a total of 65 points and contributes 6.5% toward the final grade.</p> </li> </ul> <ol> <li>Show inline CSS styling  (15 points)</li> </ol> <ol> <li>Show internal CSS styling (15 points)</li> </ol> <ol> <li>Show external CSS styling (15 points)</li> </ol> <ol> <li>Show descendant selectors (15 points)</li> </ol> <ol> <li>URL of your personal website (5 points)</li> </ol>"},{"location":"Labs/Lab04/","title":"Lab 04","text":"&amp;nbsp &amp;nbsp  Lab 04: JavaScript <ul> <li><p>This lab accomplish one goals.</p> <ul> <li>Use your newly acquired JS skills to add dynamic effect to the element</li> </ul> </li> <li><p>Save the URL in .ipynb file, ensuring that the link is clikable. Then export the file as HTML or PDF file. Submit the HTML or PEF file to Canvas by midnight (11:29 PM) on September 29.</p> </li> <li><p>This lab is worth a total of 65 points and contributes 6.5% toward the final grade.</p> </li> </ul>"},{"location":"Labs/Lab04/#1.-Create-a-button-(25-points)","title":"1. Create a button (25 points)\u00b6","text":"<p>In exercises (1, 2, 3, and 4), you learned about four different dynamic effects that can be applied to buttons using JavaScript.</p> <p>Your Task: Create a button on your webpage and apply a dynamic effect to it using JavaScript. You may reference the code demonstrated in class, but be sure to modify it and make it your own. Explore creative ways to enhance the button's interactivity and style!</p> <p>Make a screenshot of your code and attach below</p>"},{"location":"Labs/Lab04/#2.-Dynamic-effect-for-close-button-(35-points)","title":"2. Dynamic effect for close button (35 points)\u00b6","text":"<p>For Step 4 in Exercise 6, we've created a close button but haven't yet added functionality to close the pop-up window. Please add a dynamic effect to the button so that when the user clicks it, the pop-up window will close.</p> <p>Hints:</p> <p>Create a <code>const</code> variable called close_button and use <code>getElementById</code> or <code>getElementsByClassName</code> to reference the button.</p> <p>Use <code>.onclick</code> on the close_button to handle the click event.</p> <p>Refer to the code example showing how to change the <code>display</code> property in the <code>style</code> of an element.</p> <p>Make a screenshot of your code and attach below</p>"},{"location":"Labs/Lab04/#3.-URL-of-your-personal-website-(5-points)","title":"3. URL of your personal website (5 points)\u00b6","text":""},{"location":"Labs/cmd/","title":"Cmd","text":"In\u00a0[1]: Copied! <pre>## Update local repository with changes from a remote repository\n### $ git pull\n</pre> ## Update local repository with changes from a remote repository ### $ git pull In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"Labs/cmd/#Clone-a-remote-repository-to-local-repository","title":"Clone a remote repository to local repository\u00b6","text":""},{"location":"Labs/cmd/#$-git-clone","title":"$ git clone\u00b6","text":""},{"location":"Labs/Lab08/app/","title":"App","text":"In\u00a0[\u00a0]: Copied! <pre>import pandas as pd\nimport os\nimport dash\nfrom dash import dcc, Dash, html, dash_table, callback, Output, Input\nfrom dash.dependencies import Input, Output\nimport plotly.express as px\nfrom dash import dcc\n</pre> import pandas as pd import os import dash from dash import dcc, Dash, html, dash_table, callback, Output, Input from dash.dependencies import Input, Output import plotly.express as px from dash import dcc In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>df = pd.read_csv(r'D:\\ssj-30262\\docs\\Lectures\\Week10_Plotly\\service_311.csv', encoding='ISO-8859-1')\n</pre> df = pd.read_csv(r'D:\\ssj-30262\\docs\\Lectures\\Week10_Plotly\\service_311.csv', encoding='ISO-8859-1') In\u00a0[\u00a0]: Copied! <pre>app = Dash()\n</pre> app = Dash() In\u00a0[\u00a0]: Copied! <pre># App layout\napp.layout = html.Div([\n    html.Div(children='My First App with Data',\n              style={'textAlign': 'center', 'color': 'blue', 'fontSize': 30}),\n    \n    html.Div(children =dash_table.DataTable(data=df.to_dict('records'), page_size=10, style_table={'overflowX': 'auto'}, id = 'data-table')),\n    \n    dcc.RadioItems(options=['daytime', 'nighttime', 'All'], value='All', id='controls-and-radio-item'),\n    dcc.Graph(figure = {}, id = \"controls-and-graph\")\n    ])\n</pre> # App layout app.layout = html.Div([     html.Div(children='My First App with Data',               style={'textAlign': 'center', 'color': 'blue', 'fontSize': 30}),          html.Div(children =dash_table.DataTable(data=df.to_dict('records'), page_size=10, style_table={'overflowX': 'auto'}, id = 'data-table')),          dcc.RadioItems(options=['daytime', 'nighttime', 'All'], value='All', id='controls-and-radio-item'),     dcc.Graph(figure = {}, id = \"controls-and-graph\")     ]) In\u00a0[\u00a0]: Copied! <pre>@callback(\n    Output(component_id='controls-and-graph', component_property='figure'),\n    Output(component_id='data-table', component_property='data'),\n    Input(component_id='controls-and-radio-item', component_property='value')\n)\n</pre> @callback(     Output(component_id='controls-and-graph', component_property='figure'),     Output(component_id='data-table', component_property='data'),     Input(component_id='controls-and-radio-item', component_property='value') ) In\u00a0[\u00a0]: Copied! <pre>def update_graph(time_selected):\n    if time_selected == 'All':\n        filter_df = df\n    else:\n        filter_df = df[df['time_of_day'] == time_selected]\n        \n    fig = px.histogram(filter_df, x = \"weekday\", barmode='relative',histfunc='count',color='reason')\n    \n    table_data = filter_df.to_dict('records')\n    \n    return fig, table_data\n</pre> def update_graph(time_selected):     if time_selected == 'All':         filter_df = df     else:         filter_df = df[df['time_of_day'] == time_selected]              fig = px.histogram(filter_df, x = \"weekday\", barmode='relative',histfunc='count',color='reason')          table_data = filter_df.to_dict('records')          return fig, table_data  In\u00a0[\u00a0]: Copied! <pre># Run the app\nif __name__ == '__main__':\n    app.run(debug=True)\n</pre> # Run the app if __name__ == '__main__':     app.run(debug=True)"},{"location":"Lectures/Week02_Personal_Website/","title":"Week 2&3 Intro to Personal Website and HTML","text":"Week 2&amp;3: Intro to Personal Website and HTML       &amp;nbsp &amp;nbsp  <p>Comprehend list of HTML Tags</p>"},{"location":"Lectures/Week02_Personal_Website/#1.-Create-a-Repo-in-GitHub","title":"1. Create a Repo in GitHub\u00b6","text":""},{"location":"Lectures/Week02_Personal_Website/#1.1-Create-a-new-repo-in-GitHub","title":"1.1 Create a new repo in GitHub\u00b6","text":"<ol> <li>Createa repo which name should be username.github.io, where username is your username (or organization name) on GitHub.</li> </ol> <ol> <li><p>Select 'Public'</p> </li> <li><p>Select 'Add README file'</p> </li> </ol>"},{"location":"Lectures/Week02_Personal_Website/#2.-Check-url-of-your-personal-website","title":"2. Check url of your personal website\u00b6","text":"<ol> <li><p>Go to Seting of your repo</p> </li> <li><p>Go to Pages on the left side bar</p> </li> <li><p>Check the url of your personal website (The url does not generate immediately, you can check progress in action)</p> </li> </ol> <p></p>"},{"location":"Lectures/Week02_Personal_Website/#3.-Clone-your-repo-to-local-computer","title":"3. Clone your repo to local computer\u00b6","text":"<pre>git clone &lt;url&gt;\n</pre>"},{"location":"Lectures/Week02_Personal_Website/#4.-HTML-page","title":"4. HTML page\u00b6","text":""},{"location":"Lectures/Week02_Personal_Website/#4.1-What-is-html?","title":"4.1 What is html?\u00b6","text":"<ul> <li>Hyper Text Markup Language</li> <li>It is used for creating web pages</li> <li>Describes the structure of a web page</li> <li>Consists of a series of elements</li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#4.2-HTML-Page-Structure","title":"4.2 HTML Page Structure\u00b6","text":"<ul> <li><p>The html document itself begins with <code>&lt;html&gt;</code> and ends with <code>&lt;html&gt;</code></p> </li> <li><p>Content inside <code>&lt;head&gt;</code></p> </li> <li><p>Content inside the <code>&lt;title&gt;</code> shown in the browser's title bar</p> </li> <li><p>Content inside the <code>&lt;body&gt;</code> section will be displayed in a browser</p> </li> </ul> <p></p> <p>Source</p>"},{"location":"Lectures/Week02_Personal_Website/#4.3-What-is-an-HTML-element?","title":"4.3 What is an HTML element?\u00b6","text":"<p>An HTML element is contained from start tag, and an end tag</p> <pre>&lt;tagname&gt; Content goes here ... &lt;/tagname&gt;\n</pre> <p><code>&lt;html&gt; Content &lt;/html&gt;</code></p> <p><code>&lt;head&gt; Content &lt;/head&gt;</code></p> <p><code>&lt;body&gt; Content &lt;/body&gt;</code></p>"},{"location":"Lectures/Week02_Personal_Website/#4.4-The-type-Declaration","title":"4.4 The type Declaration\u00b6","text":"<p>The <code>&lt;!DOCTYPE&gt;</code> declaration represents the document type, and helps browsers to display web pages correctly.</p> <pre>&lt;!DOCTYPE html&gt;\n</pre>"},{"location":"Lectures/Week02_Personal_Website/#Install-Extension-in-VS-Code","title":"Install Extension in VS Code\u00b6","text":"<p>HTML Boilerplate</p> <p>Liver Server</p>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-1:-Create-a-html-and-construct-the-basic-structure","title":"Exercise 1: Create a html and construct the basic structure\u00b6","text":"<ol> <li>Create html file in VS Code</li> </ol> <p>The html file with name 'index.html' is recongizaed by GitHub as your personal website</p> <ol> <li>Open html in VS Code</li> </ol> <p>Beofre you edit html in VS code, install severall extensions to power your VS Code</p> <p>Search extension from the left side panel:</p> <ul> <li>Live Server: Launch local server</li> <li>HTML Boilerplate: help on html editing</li> </ul> <ol> <li><p>type html and select html5:boilerplate</p> </li> <li><p>Understand the basic structure of html</p> </li> </ol>"},{"location":"Lectures/Week02_Personal_Website/#5-head-element","title":"5 head element\u00b6","text":""},{"location":"Lectures/Week02_Personal_Website/#5.1-meta-element","title":"5.1 meta element\u00b6","text":"<ul> <li><code>&lt;meta charset = 'UTF-8'&gt;</code>: Specifies the character encoding for the HTML document</li> <li><code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</code><ul> <li>width=device-width: sets the width of the page to follow the screen-width of the device</li> <li>initial-scale=1.0: the initial zoom level when the page is first loaded by the browser</li> </ul> </li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#5.2-title-element","title":"5.2 title element\u00b6","text":"<ul> <li><code>&lt;title&gt;Personal Website&lt;/title&gt;</code></li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#6.-What-inside-the-body-element?","title":"6. What inside the body element?\u00b6","text":""},{"location":"Lectures/Week02_Personal_Website/#6.1-header","title":"6.1 header\u00b6","text":"<ul> <li><code>&lt;header&gt; Content &lt;/header&gt;</code></li> <li>For introductory content or a set of navigation links</li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#6.2-heading","title":"6.2 heading\u00b6","text":"<ul> <li><code>&lt;h1&gt;Heading 1&lt;/h1&gt;</code></li> <li><code>&lt;h5&gt;Heading 5&lt;/h5&gt;</code></li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#6.3-paragraph","title":"6.3 paragraph\u00b6","text":"<ul> <li><code>&lt;p&gt;Heading 1&lt;/p&gt;</code></li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#6.4-Comment","title":"6.4 Comment\u00b6","text":"<p><code>&lt;!-- Below is Introduction section --&gt;</code></p> <p>Shortcut for inserting comments:</p> <ul> <li>Windows/Linux: Ctrl + /</li> <li>Mac: Cmd + /</li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-2:-Add-the-header,heading-and-paragraph","title":"Exercise 2: Add the header,heading and paragraph\u00b6","text":"<ol> <li><p>Add header</p> </li> <li><p>Add heading</p> </li> <li><p>Add paragraph</p> </li> </ol>"},{"location":"Lectures/Week02_Personal_Website/#7.-HTML-Attributes","title":"7. HTML Attributes\u00b6","text":"<p>Attributes provide additional information about elements</p> <p>Attributes are always specified in the start tag</p>"},{"location":"Lectures/Week02_Personal_Website/#7.1-Style","title":"7.1 Style\u00b6","text":"<p>The <code>stype</code> attribute is used to change color, font, size and more</p> <ul> <li>Format: <code>&lt;tagname style=\"property:value;\"&gt;</code></li> <li>background-color</li> <li>Text-color</li> <li>Fonts</li> </ul> <p>Examples:</p> <p><code>&lt;h1 style=\"font-size:60px;\"&gt;Heading 1&lt;/h1&gt;</code></p> <p><code>&lt;p style=\"font-size:60px;\"&gt;Such a good day&lt;/p&gt;</code></p> <p><code>&lt;h1 style=\"color:blue;\"&gt;This is a heading&lt;/h1&gt;</code></p>"},{"location":"Lectures/Week02_Personal_Website/#7.2-Text-formatting","title":"7.2 Text formatting\u00b6","text":"<p>There are several elements for defining text with a special meaning</p> <p><code>&lt;p&gt;&lt;strong&gt;My major is GIS&lt;/strong&gt;&lt;/p&gt;</code></p> <ul> <li><code>&lt;b&gt;</code> - Bold text</li> <li><code>&lt;strong&gt;</code> - Important text</li> <li><code>&lt;i&gt;</code> - Italic text</li> <li><code>&lt;em&gt;</code> - Emphasized text</li> <li><code>&lt;mark&gt;</code> - Marked text</li> <li><code>&lt;small&gt;</code> - Smaller text</li> <li><code>&lt;del&gt;</code> - Deleted text</li> <li><code>&lt;ins&gt;</code> - Inserted text</li> <li><code>&lt;sub&gt;</code> - Subscript text</li> <li><code>&lt;sup&gt;</code> - Superscript text</li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-3:-Edit-your-text-using-style-and-Text-formatting","title":"Exercise 3: Edit your text using style and Text formatting\u00b6","text":"<ol> <li><p>Using style</p> </li> <li><p>Using Text formatting</p> </li> </ol>"},{"location":"Lectures/Week02_Personal_Website/#8.-HTML-Attributes:-Image","title":"8. HTML Attributes: Image\u00b6","text":""},{"location":"Lectures/Week02_Personal_Website/#8.1-Image","title":"8.1 Image\u00b6","text":"<p>Specifies the path the image, width and height of the image (in pixels), alternate text for an image and tooltip for the text or image</p> <p><code>&lt;img src=\"img_university.jpg\" width=\"300\" height=\"200\" alt = 'Clark'&gt;</code></p> <p>You can store image in Github and use the relative path (without the \"https://www part) as the link</p>"},{"location":"Lectures/Week02_Personal_Website/#8.2-Background-image","title":"8.2 Background image\u00b6","text":""},{"location":"Lectures/Week02_Personal_Website/#Image-on-a-HTML-element","title":"Image on a HTML element\u00b6","text":"<p><code>&lt;p style=\"background-image: url('Images/clark.jpg')\"&gt;Clark University is a private research &lt;br&gt; university in Worcester, Massachusetts. Founded in 1887 &lt;br&gt; with a large endowment from its namesake Jonas Gilman &lt;br&gt; Clark, a prominent businessman, Clark was one of the first &lt;br&gt; modern research universities in the United States.&lt;/p&gt;</code></p>"},{"location":"Lectures/Week02_Personal_Website/#9.-HTML-Attributes:-Hyperlink","title":"9. HTML Attributes: Hyperlink\u00b6","text":""},{"location":"Lectures/Week02_Personal_Website/#9.1-Hyperlink","title":"9.1 Hyperlink\u00b6","text":"<ul> <li>Use words as a link</li> </ul> <p><code>&lt;a href=\"https://www.clarku.edu/\" target =\"_top\"&gt;Clark University&lt;/a&gt;</code></p> <p><code>target</code> Specify where to open the linked document _self: Default. Open in the same window _blank: Open in a new window _parent: Open in the parent frame _top: Open in the full body of the window</p> <ul> <li>Use an image as a link</li> </ul> <p><code>&lt;a href=\"https://www.clarku.edu/\" target =\"_black\"&gt;&lt;img src=\"Images\\clark.jpg\" alt=\"clark\"&gt; &lt;/a&gt;</code></p> <ul> <li>Link to an Email Address</li> </ul> <p><code>&lt;a href=\"mailto:someone@example.com\"&gt;Send email&lt;/a&gt;</code></p>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-4:-Add-image-and-link","title":"Exercise 4: Add image and link\u00b6","text":"<ol> <li><p>Add image</p> </li> <li><p>Add link</p> </li> </ol>"},{"location":"Lectures/Week02_Personal_Website/#10.-Linking-to-a-Bookmark","title":"10. Linking to a Bookmark\u00b6","text":""},{"location":"Lectures/Week02_Personal_Website/#10.1-Bookmark-for-header","title":"10.1 Bookmark for header\u00b6","text":"<p>It is created using the <code>&lt;a&gt;</code> tag with an <code>&lt;id&gt;</code> attribute to connect a section and nagavitation title</p> <p>First, we create a bookmark for a element using <code>id</code> attribute</p> <p><code>&lt;h1 id = \"Pro\"&gt;Projects&lt;/h1&gt;</code></p> <p>Second, we add a link to the bookmark within the same page. For example, we add a link to the Projects in <code>&lt;header&gt;</code></p> <p><code>&lt;header&gt;&lt;a href=\"#Pro\"&gt;Projects&lt;/a&gt;&lt;/header&gt;</code></p>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-5:-Add-bookmark","title":"Exercise 5: Add bookmark\u00b6","text":"<ol> <li><p>create a bookmark for a element using <code>id</code> attribute</p> </li> <li><p>Add a link to the bookmark</p> </li> </ol>"},{"location":"Lectures/Week02_Personal_Website/#11.-Navigation-Bar","title":"11. Navigation Bar\u00b6","text":"<p>Basically navigation bar is the list of links</p>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-6:-Add-Navigation-bar","title":"Exercise 6: Add Navigation bar\u00b6","text":"<ol> <li>Create navigation bar using ul and li</li> </ol> <ul> <li><code>&lt;nav&gt;</code>, <code>&lt;ul&gt;</code> and <code>&lt;li&gt;</code> build the navigation bar for a HTML</li> <li><code>&lt;nav&gt;</code> is used to defines a set of navigation links and mainly intend for major blocks of navigation links</li> <li><code>&lt;ul&gt;</code> and <code>&lt;li&gt;</code>create list of navigation bars</li> </ul> <ol> <li>Connect to section</li> </ol> <ul> <li>Add id in the element, e.g, <code>&lt;p id = &gt;</code></li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#13.-Div-element","title":"13. Div element\u00b6","text":"<p><code>&lt;div&gt;</code> is used to group sections of a web page together</p> <p></p> <p>We can have many <code>&lt;div&gt;</code> elements on the same page</p> <p></p>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-7:-Add-Div","title":"Exercise 7: Add Div\u00b6","text":"<ol> <li>Use the <code>&lt;div&gt;</code> to group sections of a web page together</li> </ol>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-8.-Div-contain-figure-and-figure-caption","title":"Exercise 8. Div contain figure and figure caption\u00b6","text":"<ol> <li><p>Learn how many <code>&lt;div&gt;</code> need to be used for group sections</p> </li> <li><p>Use a <code>&lt;figure&gt;</code> element to mark up a photo in a document, and a <code>&lt;figcaption&gt;</code> element to define a caption for the photo</p> </li> </ol> <p></p>"},{"location":"Lectures/Week02_Personal_Website/#13.-footer-tag","title":"13. footer tag\u00b6","text":"<ul> <li>Defines a footer for a document or section</li> </ul>"},{"location":"Lectures/Week02_Personal_Website/#Exercise-9:-Add-footer","title":"Exercise 9: Add footer\u00b6","text":"<ol> <li>Add footer</li> </ol>"},{"location":"Lectures/Week02_Personal_Website/#Troubleshooting","title":"Troubleshooting\u00b6","text":"<p>If you get error message like below:</p> <p></p> <p>The possible issue is the buffer size in GitHub</p> <p>Solution:</p> <p><code>git config http.postBuffer 524288000</code></p> <p>Or decrease the image's size on your personal website</p>"},{"location":"Lectures/Week03_CSS/","title":"Week 4 Cascading Style Sheets","text":"Week 4: Cascading Style Sheets       &amp;nbsp &amp;nbsp  <p>Links can be styled in many different ways</p> <ul> <li>a:link - a normal, unvisited link</li> <li>a:visited - a link the user has visited</li> <li>a:hover - a link the user mouses over it</li> <li>a:active-  a link the moment it is clicked</li> </ul> <p>Syntax:</p> <p></p>"},{"location":"Lectures/Week03_CSS/#1.-CSS-Syntax","title":"1. CSS Syntax\u00b6","text":"<ul> <li>Selection: HTML element you want to style</li> <li>Declaration: includes a property name and a value, separated by a colon; one of more declarations separated by semicolons</li> </ul>"},{"location":"Lectures/Week03_CSS/#2.-Ways-to-use-CSS","title":"2. Ways to use CSS\u00b6","text":"<ul> <li>Inline: using the style attribute inside HTML elements</li> <li>Internal: using the style element in the head sectio</li> <li>External: using a link element to an external CSS file</li> </ul>"},{"location":"Lectures/Week03_CSS/#2.1-Inline-CSS","title":"2.1 Inline CSS\u00b6","text":"<p><code>&lt;h1 style=\"color:blue;font-size: 30px\"&gt;Introduction&lt;/h1&gt;</code></p>"},{"location":"Lectures/Week03_CSS/#2.2-Internal-CSS","title":"2.2 Internal CSS\u00b6","text":"<ul> <li>Internal CSS is used to define a style for a single html page.</li> <li>An internal CSS is defined in the <code>&lt;head&gt;</code> section of an HTML page, within a <code>&lt;style&gt;</code> element</li> </ul> <p>Example: see the text color, font size and font for ALL  the <code>&lt;h1&gt;</code> elements</p> <p></p>"},{"location":"Lectures/Week03_CSS/#3.-Internal-CSS:-Selector","title":"3. Internal CSS: Selector\u00b6","text":"<p>For an internal CSS, we have severl ways to specify the selector.</p>"},{"location":"Lectures/Week03_CSS/#3.1-type-selector","title":"3.1 type selector\u00b6","text":"<p>Type selector is referred to a element selector.</p> <p><code>p {text-align: center; color: red;}</code></p>"},{"location":"Lectures/Week03_CSS/#Exercise-1:-Add-Interval-CSS-based-on-element","title":"Exercise 1: Add Interval CSS based on element\u00b6","text":"<ol> <li>Add internal css for <code>&lt;p&gt;</code></li> <li>Add internal css for <code>&lt;h1&gt;</code> or other heading</li> </ol>"},{"location":"Lectures/Week03_CSS/#3.2-id-selector","title":"3.2 id selector\u00b6","text":"<ul> <li><code>id</code> is used to specify a unique id for an HTML element and must be unique within the HTML document.</li> <li>The <code>id</code> of an element is better to be unique within a page</li> <li>You can have multiple element with same <code>id</code> but functions will only return the first matching element</li> </ul>"},{"location":"Lectures/Week03_CSS/#Exercise-2:-Add-Internal-CSS-based-on-id","title":"Exercise 2: Add Internal CSS based on id\u00b6","text":"<p>Step 1: add the id for a element</p> <p><code>&lt;p id=\"intro\"&gt;Hello World!&lt;/p&gt;</code></p> <p>Step 2: write a hash (#) then followed by an id name and define the CSS within curly braces {}</p> <p><code>&lt;style&gt;#intro{text-align: center;color: red;}&lt;/style&gt;</code></p>"},{"location":"Lectures/Week03_CSS/#3.3-class-selector","title":"3.3 class selector\u00b6","text":"<ul> <li><code>class</code> attribute is used to asign one or more class names to an HTML element</li> <li><code>class</code> selector starts with a <code>(.)</code> dot</li> <li>It allows you to apply CSS styles and JavaScript functions to multiple elements with the same class</li> <li>Multiple class names can be assigned to an element by separating them with spaces</li> <li>Class is used to specify a class for an HTML element</li> <li>Multiple HTML elements can share the same class</li> </ul> <p>In the below example, all HTML elements with class \"intro\" will be red and center-aligned</p> <p><code>.intro { text-align: center; color: red; }</code></p>"},{"location":"Lectures/Week03_CSS/#Exercise-3:-Add-Internal-CSS-based-on-class","title":"Exercise 3: Add Internal CSS based on class\u00b6","text":"<ol> <li><p>Add class for a element</p> </li> <li><p>Add internal css for elements with same class</p> </li> </ol>"},{"location":"Lectures/Week03_CSS/#3.4-Targeting-classess-on-particular-element","title":"3.4 Targeting classess on particular element\u00b6","text":"<p><code>&lt;style&gt; h1.intro{ color: red;} &lt;/style&gt;</code></p> <p><code>&lt;h1 class=\"intro\"&gt; Introduction&lt;/h1&gt;</code></p> <p><code>&lt;p class=\"intro\"&gt; Hi, My name is Nancy&lt;/p&gt;</code></p>"},{"location":"Lectures/Week03_CSS/#3.5-Universal-selector","title":"3.5 Universal selector\u00b6","text":"<p>Use the universal selector by itself to set global styles for a page</p> <p><code>*{}</code></p> <p>Use the universal selector in combination with a descendant combinator to select all elements inside a specific ancestor elements</p> <p>For example, selects all elements inside the <code>&lt;p&gt;</code> element</p> <p><code>p *</code></p>"},{"location":"Lectures/Week03_CSS/#4.-Cascading-order-for-Inline,-Internal-and-External-style-sheets","title":"4. Cascading order for Inline, Internal and External style sheets\u00b6","text":"<p>The priority is highest to lowest from 1 to 3</p> <ol> <li>Inline style</li> <li>Internal style</li> <li>External style</li> </ol> <p>So, an inline style will override external and internal styles.</p>"},{"location":"Lectures/Week03_CSS/#Exercise-4:-Test-priority-of-inline-and-internal-style","title":"Exercise 4: Test priority of inline and internal style\u00b6","text":"<ol> <li>Create inline style and internal style for same element to see the difference</li> </ol>"},{"location":"Lectures/Week03_CSS/#5.-Descendant-selector","title":"5. Descendant selector\u00b6","text":"<p>The descendant combinator \u2014 typically represented by a single space (\" \") character</p> <p>Example 1: p element under class intro <code>.intro p</code></p> <p>Example 2: the a element under nav element <code>nav a</code></p>"},{"location":"Lectures/Week03_CSS/#Exercise-5:-Modify-the-list-in-navigation-bar","title":"Exercise 5: Modify the list in navigation bar\u00b6","text":"<p>We have two list in different section (navigation bar and education section)</p> <p>Try to change the style of list in navigation bar but does not influence the list in education section</p> <p>See difference between <code>nav ul li</code> and <code>li</code></p>"},{"location":"Lectures/Week03_CSS/#6.-Pseudo-classes","title":"6. Pseudo-classes\u00b6","text":"<p>A Pseudo-class is used to define a special state of an element</p> <p>For example:</p> <ul> <li>Style visited and unvisited links differently</li> </ul>"},{"location":"Lectures/Week03_CSS/#7.-Display-property","title":"7. Display property\u00b6","text":"<p>The display property is the most important CSS property for controlling layout.</p> <p>The display property is used to specify how an element is shown on a web page.</p> <p>Example of Display Property</p>"},{"location":"Lectures/Week03_CSS/#Exercise-6:-Beautify-navigation-links-(descendant-selectors)","title":"Exercise 6: Beautify navigation links (descendant selectors)\u00b6","text":"<ol> <li>Attributes for <code>&lt;nav&gt;</code> tag</li> </ol> <ol> <li>Attributes for <code>&lt;li&gt;</code> tag</li> </ol> <ol> <li>Attributes for <code>&lt;a&gt;</code> tag</li> </ol>"},{"location":"Lectures/Week03_CSS/#8.-Margin,-border-and-padding","title":"8. Margin, border and padding\u00b6","text":"<p>Source</p>"},{"location":"Lectures/Week03_CSS/#8.1-Margin-property","title":"8.1 Margin property\u00b6","text":"<ul> <li><p>margin: 25px 50px 75px 100px</p> </li> <li><p>padding: 25px 50px 75px 100px</p> <ul> <li>top margin is 25 px</li> <li>right margin is 50 px</li> <li>bottom margin is 75 px</li> <li>left margin is 100px</li> </ul> </li> <li><p>margin-top: 120px;</p> <p>margin-left: 200px;</p> <p>margin-right: 200px;</p> </li> <li><p>border</p> </li> </ul>"},{"location":"Lectures/Week03_CSS/#Exercise-7.-Change-the-margin,-padding-or-border-of-navigation-bar","title":"Exercise 7. Change the margin, padding or border of navigation bar\u00b6","text":"<p>First, you can set up the border to solid to distinguish where is the margin and where is the padding</p>"},{"location":"Lectures/Week03_CSS/#9.-Float","title":"9. Float\u00b6","text":"<p>The <code>float</code> is used for positioning and formatting content to the specific location</p> <p>Demo of Different values of the display property</p>"},{"location":"Lectures/Week03_CSS/#Exercise-8:-Beautify-Intro-section-(float,-margin,-padding,-border)","title":"Exercise 8: Beautify Intro section (float, margin, padding, border)\u00b6","text":"<ol> <li>set up your div into left or right</li> </ol> <ul> <li>float: left;</li> </ul> <ol> <li>set up margin, or padding, or border for your different section</li> </ol> <ul> <li>margin-left: 200px;</li> <li>margin-top: 100px;</li> <li>margin-right: 200px;</li> </ul>"},{"location":"Lectures/Week03_CSS/#Exercise-9:-Beautify-Figure-(margin,-padding,-border)-using-external-css","title":"Exercise 9: Beautify Figure (margin, padding, border) using external css\u00b6","text":"<p>Figure is special because it contain two parts, one is img and one is Figureshare</p> <ol> <li>Modify the image size</li> </ol> <p></p> <ol> <li>Place three Figures in a line horizontally<ul> <li>display: flex;</li> <li>justify-content: center;</li> <li>gap: 250px;</li> </ul> </li> </ol> <p></p>"},{"location":"Lectures/Week03_CSS/#Exercise-10:-Beautify-Footer","title":"Exercise 10: Beautify Footer\u00b6","text":"<ol> <li>Add the extra information to to footer</li> </ol> <ul> <li>like address, copyright</li> </ul> <ol> <li>Embead a google map</li> </ol>"},{"location":"Lectures/Week04_JS_Part2/","title":"Week 6 JavaScript 02","text":"Week 6: JavaScript Part 2        &amp;nbsp &amp;nbsp  <pre><code>&lt;div&gt; &lt;button id =\"backtoTop\"&gt;Back To Top&lt;/button&gt;\n&lt;/div&gt;\n\n## store below script in external js\n\nconst backButton = document.getElementById('backtoTop');\nbackButton.onclick = function(){\n    window.scrollTo({\n        top: 0,\n        behavior:'smooth'\n    })\n};\n</code></pre> <p>Step 2: Set up the CSS style for the Pop-up window</p> <ul> <li>The <code>z-index</code>property specifies the stack order of an element.</li> <li>Overflow set up the desired window when content does not fit in the element</li> </ul> <pre><code>    .myPop{\n    display: None;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width:100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(252, 252, 252);\n    text-align: center;\n    border: solid;\n    }\n</code></pre> <p>Step 3: Set up the CSS style for the close button</p> <pre><code>    .close{\n        position: absolute;\n        top: 5rem;\n        right: 10rem;\n        color: #0d27d0;\n        font-size: 10rem;\n        font-weight: bold;\n    }\n\n    .close:hover,.close:focus {\n    color: #bbb;\n    text-decoration: none;\n    cursor: pointer;\n    }\n</code></pre> <p>Step 4: Using JS to add dynamic effect</p> <ul> <li>document.getElementsByClassName(\"myPop\"): This retrieves all elements with the class \"myPop\" and  returns a collection (like an array).</li> <li>[0]: The index [0] accesses the first element in the collection. If there's only one element with the class \"myPop\", that element will be at index 0, which is why you need to use [0] to target it.</li> <li>If you omitted [0], you would be trying to manipulate a collection of elements, which would cause an error because methods like style.display are intended for individual elements, not collections.</li> </ul> <pre><code>&lt;script&gt;\n        // Get the image and insert it inside the modal\n        const images = document.getElementsByClassName(\"gallery-img\");\n        const captionText = document.getElementById(\"caption\");\n\n        const pop_w = document.getElementsByClassName(\"myPop\")[0];\n        const pop_Img = document.getElementById(\"img_pop\");\n        const pop_h1 = document.getElementById(\"h1_pop\")\n\n        // Loop through all gallery images\n        for (let i = 0; i &lt; images.length; i++) {\n            images[i].onclick = function() {\n                pop_w.style.display = \"block\";\n                pop_Img.src = this.src;\n                pop_h1.innerHTML = this.alt\n            }\n        }\n    &lt;/script&gt;\n</code></pre>"},{"location":"Lectures/Week04_JS_Part2/#1.-Object","title":"1. Object\u00b6","text":"<p>An object is a complex data type that allows you to store collections of data and more complex entities.</p> <p>Example of Object: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects</p>"},{"location":"Lectures/Week04_JS_Part2/#1.1-The-Document-Object","title":"1.1 The Document Object\u00b6","text":"<ul> <li>When an HTML document is loaded in a web browser, it transforms into a document object, serving as the root node of the document.</li> <li>This document object is a property of the window object and can be accessed using either <code>window.document</code> or simply <code>document.</code></li> </ul>"},{"location":"Lectures/Week04_JS_Part2/#1.2-Properties-/-Methods-in-Document-Object","title":"1.2 Properties / Methods in Document Object\u00b6","text":"<ul> <li><p>Property: document.propertyName</p> <ul> <li>Properties are values that you can obtain or change</li> </ul> </li> <li><p>Method: document.methodName()</p> <ul> <li>Methods are actions you can perform on HTML element</li> </ul> </li> </ul> <p>Source: https://www.w3schools.com/jsref/dom_obj_document.asp</p> <p></p>"},{"location":"Lectures/Week04_JS_Part2/#Exercise-1.-Update-Time-Automatically","title":"Exercise 1. Update Time Automatically\u00b6","text":"<ul> <li>Update the year automatically</li> <li>Using <code>document</code> object, <code>write</code> method</li> <li>new Date() creates a new date object with the current date and time at the moment the code is executed.</li> <li>.getMonth() get the current year from the date</li> </ul> <pre><code>&lt;p&gt;&lt;small&gt;&amp;copy;Copyright &amp;copy;\n    &lt;script&gt;document.write(new Date().getMonth() + 1 + '/' + new Date().getFullYear());&lt;/script&gt;\n    Yanan Wu &lt;br&gt; All rights reserved&lt;/small&gt;&lt;/p&gt;\n</code></pre>"},{"location":"Lectures/Week04_JS_Part2/#1.3-Change-the-content-of-the-element","title":"1.3 Change the content of the element\u00b6","text":"<ul> <li><p>Change the property of the <code>&lt;p&gt;</code> element with id='location'</p> </li> <li><p>The most common way to access an element is to use the <code>id</code> of the element</p> </li> <li><p>The <code>innerHTML</code> is used to get the values of element</p> </li> </ul>"},{"location":"Lectures/Week04_JS_Part2/#2.-Events-in-JS","title":"2. Events in JS\u00b6","text":"<p>Events are things that happen in the web page you are programming</p> <ul> <li><p>The user selects, clicks, or hovers the cursor over a certain element</p> </li> <li><p>Common events: <code>onclick</code>, <code>onmouseover</code>, <code>onchange</code></p> </li> </ul> <p>HTML allows event handler attributes, with JavaScript code, to be added to HTML elements.</p> <p><code>&lt;element event='some JavaScript'&gt;</code></p>"},{"location":"Lectures/Week04_JS_Part2/#Exercise-2:-Add-events-to-button","title":"Exercise 2: Add events to button\u00b6","text":"<p><code>onclick</code> is added to a <code>&lt;button&gt;</code> element</p> <ul> <li>Step 1: Create a button</li> <li>Step 2: Set up where the message appear</li> <li>Step 3: JavaScript to Handle Events</li> </ul> <p>Add JavaScript to make the button functional. This script will listen for the click event and display a message</p> <pre><code>&lt;button onclick = \"document.getElementById('lucky').textContent='You are the BEST One'\";&gt;Get your lucky words&lt;/button&gt;\n&lt;p id = \"lucky\"&gt;&lt;/p&gt;\n</code></pre> <p>Changes the content of its own element</p> <pre><code>&lt;button onclick= \"this.textContent = Date()\" style=\"height: 100px;font-size: large;\"&gt;The current date and time&lt;/button&gt;\n</code></pre>"},{"location":"Lectures/Week04_JS_Part2/#3.-Back-To-Top-Button","title":"3. Back To Top Button\u00b6","text":"<p>The JS accesses the button via <code>document.getElementById()</code>, attaches an event handler with <code>onclick</code>, and uses the <code>window.scrollTo()</code> method to scroll the page to the top. The smooth scrolling effect is achieved by setting <code>behavior: 'smooth'</code>, enhancing the user experience.</p>"},{"location":"Lectures/Week04_JS_Part2/#Exercise-3:-Back-To-Top-Button","title":"Exercise 3: Back To Top Button\u00b6","text":"<ul> <li>Created using  with an ID to interact with JavaScript</li> <li>Using const to declare the backButton variable to store the reference to the HTML element.</li> <li>Using the onclick event to trigger functions based on user interaction</li> <li>window.scrollTo(): This method control the scrolling</li> </ul>"},{"location":"Lectures/Week04_JS_Part2/#4.-Dynamic-effect:-Add-or-remove-class-to-a-element","title":"4. Dynamic effect: Add or remove class to a element\u00b6","text":"<ul> <li><code>document.querySelector()</code>: This method selects the first matching element in the DOM that matches the specified CSS selector. Here, it's used to get the button with the class change_bk.</li> <li><code>document.querySelectorAll()</code>: This method returns a NodeList of all elements matching the specified CSS selector. In this case, it selects all <code>&lt;a&gt; tags</code> within the first <code>&lt;p&gt; tag</code> of the <code>#p_intro element</code>.</li> <li>Variable initialization: let <code>back_g = true</code>;</li> <li>Event Listeners: Assigning an onclick event handler to the changebutton. This allows the function to execute whenever the button is clicked.</li> <li><code>forEach()</code> Method: This array method allows you to execute a function on each element in the NodeList. Here, it's used to iterate over each <code>&lt;a&gt; link</code>.</li> <li><code>link</code> represents one of the <code>&lt;a&gt; elements</code> selected by <code>document.querySelectorAll(\"#p_intro p a\")</code>.</li> </ul>"},{"location":"Lectures/Week04_JS_Part2/#Exercise-4:-Highlight-elements","title":"Exercise 4: Highlight elements\u00b6","text":"<ul> <li>Step 1: Create a button</li> </ul> <pre><code> &lt;button class='change_bk'&gt;Click here to highlight my past experience&lt;/button&gt;\n</code></pre> <ul> <li>Step 2: Add a potential class</li> </ul> <pre><code>.highlight_e {\n    background-color: yellow; /* Change to your desired background color */\n}\n</code></pre> <ul> <li>Step 3: Create dynamic effect to button, add or remove class to elements</li> </ul> <pre><code>const changebutton = document.querySelector(\".change_bk\");\nconst past_experience =  document.querySelectorAll(\"#p_intro p a\");\n\nlet back_g = true;\n\nchangebutton.onclick = function(){\n    past_experience.forEach(link =&gt; {\n        if (back_g){\n            link.classList.add(\"highlight_e\");\n        } else{\n            link.classList.remove(\"highlight_e\");\n        }\n    })\n    back_g = !back_g;\n}\n</code></pre> <ul> <li>Step 4: Make connection betwen your html and external css or js</li> </ul> <p>Add script and link to your html</p>"},{"location":"Lectures/Week04_JS_Part2/#Exercise-5.-Toggle-Effect-Between-Two-elements-Using-JS-and-CSS","title":"Exercise 5. Toggle Effect Between Two elements Using JS and CSS\u00b6","text":"<p>We create an effect that toggles between two header on a webpage. The headers will fade in and out every few seconds</p>"},{"location":"Lectures/Week04_JS_Part2/#Step-1:-HTML-Structure","title":"Step 1: HTML Structure\u00b6","text":"<p>Start by defining two headers in your HTML file:</p> <pre><code>&lt;div class=\"nav_bar_header1\"&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/div&gt;\n&lt;div class=\"nav_bar_header2\"&gt;&lt;h1&gt;I'm a Geospatial Scientist&lt;/h1&gt;&lt;/div&gt;\n</code></pre>"},{"location":"Lectures/Week04_JS_Part2/#Step-2:-CSS-for-Transition","title":"Step 2: CSS for Transition\u00b6","text":"<p>We will add transitions for a smooth fade effect and make sure only one header is visible at a time</p> <ul> <li>position: absolute;: This positions the headers relative to their parent container, so they can overlap.</li> <li>opacity: 0;: Initially hides the headers.</li> <li>transition: opacity 1s ease-in-out;: Adds a smooth fade effect over 1 second when changing the opacity.</li> </ul> <pre><code>.nav_bar_header1, .nav_bar_header2 {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    opacity: 0; /* Initially hidden */\n    transition: opacity 1s ease-in-out; /* Smooth fade */\n}\n\n.show {\n    opacity: 1; /* Make visible when the .show class is added */\n}\n</code></pre>"},{"location":"Lectures/Week04_JS_Part2/#Step-3:-JavaScript-to-Toggle-Headers","title":"Step 3: JavaScript to Toggle Headers\u00b6","text":"<p>Add the JavaScript that makes the headers alternate every few seconds:</p> <ul> <li>setTimeout method: https://www.w3schools.com/jsref/met_win_settimeout.asp<ul> <li>The setTimeout() method calls a function after a number of milliseconds.</li> <li>1 second = 1000 milliseconds.</li> </ul> </li> </ul> <pre><code>window.onload = function() {\n    // Get headers\n    const header1 = document.querySelector(\".nav_bar_header1\");\n    const header2 = document.querySelector(\".nav_bar_header2\");\n\n    let isHeader1Visible = true; // Start with header1 visible\n\n    // Function to toggle between headers\n    function toggleHeaders() {\n        if (isHeader1Visible) {\n            // Show header1, hide header2\n            header1.classList.add(\"show\");\n            header2.classList.remove(\"show\");\n        } else {\n            // Show header2, hide header1\n            header2.classList.add(\"show\");\n            header1.classList.remove(\"show\");\n        }\n\n        // Switch to the other header for the next cycle\n        isHeader1Visible = !isHeader1Visible;\n\n        // Repeat the toggle every 4 seconds\n        setTimeout(toggleHeaders, 4000);\n    }\n\n    // Start the toggle cycle\n    toggleHeaders();\n};\n</code></pre>"},{"location":"Lectures/Week04_JS_Part2/#Exercise-6:-Add-dynamic-effects-to-the-image","title":"Exercise 6: Add dynamic effects to the image\u00b6","text":"<p>Step 1: Create Figure and Pop-up Window</p> <ul> <li><code>&lt;span&gt; tag</code>: The <code>&lt;span&gt;</code> element is a generic container for inline content, used to style or manipulate parts of text or other inline content in HTML without affecting the page's layout structure.</li> <li><code>&amp;times;</code>: This is an HTML entity that represents the multiplication sign (\u00d7), which is often used as a symbol for a \"close\" button, especially in modal dialogs or alerts.</li> </ul> <pre><code>    &lt;div class=\"gallery-item\"&gt;\n        &lt;img src=\"Images\\presentation\\aag_denver.jpg\" \n        alt=\"Association of American Geographers Conference\" class=\"gallery-img\"&gt;\n        &lt;figcaption style=\"font-size: 50px;\"&gt;AAG Conference&lt;/figcaption&gt;\n    &lt;/div&gt;\n\n    &lt;div  class=\"myPop\"&gt;\n        &lt;span class=\"close\"&gt;&amp;times;&lt;/span&gt;\n        &lt;img id=\"img_pop\" style=\"margin-top: 10rem;\"&gt;\n        &lt;h1 id = \"h1_pop\"&gt;&lt;/h1&gt;\n    &lt;/div&gt;\n\n\n</code></pre>"},{"location":"Lectures/Week04_JavaScript/","title":"Week 5 JavaScript","text":"Week 5: JavaScript Part 1       &amp;nbsp &amp;nbsp"},{"location":"Lectures/Week04_JavaScript/#1.-What-is-JavaScript-(JS)","title":"1. What is JavaScript (JS)\u00b6","text":"<p>JavaScript is a scripting language used to create dynamic content on web pages. It can interact with HTML and CSS to enhance user experiences</p> <p>JS code is between <code>&lt;script&gt;</code> and <code>&lt;/script&gt;</code> tags</p>"},{"location":"Lectures/Week04_JavaScript/#2.-Code-editor","title":"2. Code editor\u00b6","text":""},{"location":"Lectures/Week04_JavaScript/#3.-Writing-a-JavaScript-Program","title":"3. Writing a JavaScript Program\u00b6","text":"<ul> <li>Scripts can be placed in the <code>&lt;body&gt;</code>, or in the <code>&lt;head&gt;</code> section of an HTML page</li> <li>JS is better to put at the end of <code>&lt;body&gt;</code> section,</li> <li>Saved in external files and access an external script</li> </ul> <p><code>&lt;script src = \"\" &gt;&lt;/script&gt;</code></p>"},{"location":"Lectures/Week04_JavaScript/#4.-JavaScript-Syntax","title":"4. JavaScript Syntax\u00b6","text":"<ul> <li>JavaScript command lines end with a semicolon to separate it from the next command line in the program</li> </ul>"},{"location":"Lectures/Week04_JavaScript/#Exercise-1:-Create-an-empty-html-and-write-some-simple-JS","title":"Exercise 1: Create an empty html and write some simple JS\u00b6","text":"<p>1.1 Write JS within HTML file</p> <ul> <li>Write JS within HTML file</li> <li>Write comments</li> </ul> <p></p> <p>1.2 Write JS in external file</p> <ul> <li>Create JS in a folder</li> <li>Connect JS in external file to HTML</li> </ul> <p></p>"},{"location":"Lectures/Week04_JavaScript/#5.-JavaScript-Basics","title":"5. JavaScript Basics\u00b6","text":""},{"location":"Lectures/Week04_JavaScript/#5.1-Variables","title":"5.1 Variables\u00b6","text":"<p>Variables are used to store values: <code>const</code>, <code>var</code>, <code>let</code>,</p> <ul> <li>The 'var' was used in JS from 1995 to 2015, now should only be used in code for older browsers</li> <li>The 'let' and 'const' was added to JS in 2015</li> <li>Always use <code>const</code> if the value should not be changed</li> </ul> <p>The variables</p> <ul> <li>can not be a reserved keys</li> <li>should be meaningful</li> <li>can not start with a number</li> <li>can not contain a space a hyphen</li> <li>are case sensative</li> </ul>"},{"location":"Lectures/Week04_JavaScript/#Exercise-2:-Create-a-variable","title":"Exercise 2: Create a variable\u00b6","text":""},{"location":"Lectures/Week04_JavaScript/#5.2-Constant","title":"5.2 Constant\u00b6","text":"<ul> <li><p><code>const</code> is a variable whose value cannot be changed once it is assigned</p> </li> <li><p>Below we tried to change the value of <code>const</code> and will cause the error</p> </li> </ul> <p></p>"},{"location":"Lectures/Week04_JavaScript/#5.3-Type-of-Variables","title":"5.3 Type of Variables\u00b6","text":"<ul> <li>Numeric</li> <li>String</li> <li>Boolean</li> <li>Null</li> </ul>"},{"location":"Lectures/Week04_JavaScript/#6.-Objects-in-JS","title":"6. Objects in JS\u00b6","text":""},{"location":"Lectures/Week04_JavaScript/#Exercise-3:-Create-a-object","title":"Exercise 3: Create a object\u00b6","text":""},{"location":"Lectures/Week04_JavaScript/#7.-Array","title":"7. Array\u00b6","text":"<ul> <li>An array is a data structure that allows you to store multiple values in a single variable</li> <li>Arrays are useful for managing lists of items, such as numbers, strings, or objects.</li> </ul>"},{"location":"Lectures/Week04_JavaScript/#7.1-Declaring-an-Array","title":"7.1 Declaring an Array\u00b6","text":"<p>You can create an array using the [] syntax or the Array() constructor.</p> <p></p>"},{"location":"Lectures/Week04_JavaScript/#8.-Function","title":"8. Function\u00b6","text":"<p>A JS function is a reusable block of code designed to perform a particular task</p> <p>Functions allow developers to organize the reuse code efficiently</p>"},{"location":"Lectures/Week04_JavaScript/#8.1-Function-Declaration","title":"8.1 Function Declaration\u00b6","text":"<ol> <li>Function format</li> </ol> <p>function name(parameter1, parameter2,...){</p> <p> code to be executed</p> <p>}</p> <ol> <li>Call function</li> </ol> <p>name();</p> <p></p>"},{"location":"Lectures/Week04_JavaScript/#8.2-Embed-function-into-element","title":"8.2 Embed function into element\u00b6","text":"<ul> <li>Embedding a function into an HTML element in JavaScript involves setting up event handlers that call a function when the user interacts with the element.</li> <li>This allows you to dynamically change or update the content or behavior of the webpage based on user actions.</li> </ul>"},{"location":"Lectures/week01/","title":"Week 1 Intro to Python","text":""},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/","title":"Week 11 ArcGIS JavaScript API","text":"Week 11: ArcGIS API for JavaScript       &amp;nbsp &amp;nbsp  <p>API's software development kit (SDK) provide many sample code to demonstrate how to accomplist a interactive map with the API. A good way for learning the API, espically for the beginner is to find a sample that fit your needs and midify it based on your requirements.</p> <p>JavaScript API in ArcGIS Pro has contents but not limited to below:</p> <ol> <li>Key features</li> <li>Install and Set up</li> <li>...</li> </ol> <ul> <li>Check the code in Sandbox</li> </ul> <p>You can modify the code and see the change immediately appear on the right side</p> <p>basemap: \"dark-gray\" zoom = 10 center : []</p> <p>JavaScript ArcGIS Pro Github Documentation</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#ArcGIS-JavaScript-API-Documentation","title":"ArcGIS JavaScript API Documentation\u00b6","text":""},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#API-Reference","title":"API Reference\u00b6","text":"<p>Referecne &gt; Core API Reference</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Sample-Code","title":"Sample Code\u00b6","text":""},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#JavaScript-Github","title":"JavaScript Github\u00b6","text":""},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Setup-API","title":"Setup API\u00b6","text":""},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Web-Page-Component","title":"Web Page Component\u00b6","text":""},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#MapView","title":"MapView\u00b6","text":"<p>Create a 2D map</p> <ol> <li>Define a basemap</li> </ol> <p></p> <ol> <li>MapView display map in 2D</li> </ol> <p></p> <ol> <li>SceneView display map in 3D</li> </ol> <p>Create a 3D map</p> <p></p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Load-the-map-and-mapview-modules","title":"Load the map and mapview modules\u00b6","text":"<ul> <li>Load modules</li> <li>Creating instance</li> </ul> <p>For the name of the module, you can have any name but make sure it is easier to keep track</p> <p>The name of the module should be in the same order of module</p> <pre><code>  require([\"esri/Map\", \"esri/views/MapView\"], (Map, MapView) =&gt; {\n        const map = new Map({\n          basemap: \"topo-vector\"\n        });\n\n        const view = new MapView({\n          container: \"viewDiv\",\n          map: map,\n          zoom: 4,\n          center: [15, 65] // longitude, latitude\n        });\n      });\n</code></pre>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Add-layers","title":"Add layers\u00b6","text":"<p><code>Thank you Dr. John Rogan, for providing the Solar Panel data to enrich my course content! :)</code></p> <p>Data Soucr: Clark University HERO program</p> <p>Different layers</p> <ul> <li>Check link below to see how the different layers are defined in web map</li> </ul> <p>The below map add the feature layer and GeoJson layer</p> <p>https://developers.arcgis.com/javascript/latest/sample-code/sandbox/?sample=featurereduction-cluster</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Practice-1.-Add-Feature-Layer","title":"Practice 1. Add Feature Layer\u00b6","text":"<p>Feature layer can be added to the map through ArcGIS Online Service URL</p> <p>Feature Layer Documentation</p> <p>Add Data: Solor Panel to the map</p> <ol> <li>Define the module</li> <li>Add FeatureLayer</li> </ol> <pre><code>   const featureLayer = new FeatureLayer({\n         url:  \"https://services5.arcgis.com/FKwcDz27wRAj4HUT/arcgis/rest/services/Solar_Panel_Data/FeatureServer/0\"});\n</code></pre> <ol> <li>Add FeatureLayer to the Map</li> </ol> <pre><code>map.add(featureLayer);\n</code></pre>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Map-interaction-using-popups","title":"Map interaction using popups\u00b6","text":"<ul> <li>Respond to mouse clicks</li> <li>Provides info on<ul> <li>feature attribute</li> </ul> </li> <li>Customizable</li> </ul>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#FeatureLayer-has-associated-popupTemplate-property","title":"FeatureLayer has associated popupTemplate property\u00b6","text":"<p>Check the popupTemplate Property in FeatureLayer</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Practice-2:-Add-Popup-Windown-to-FeatureLayer","title":"Practice 2: Add Popup Windown to FeatureLayer\u00b6","text":"<p>Sample Code</p> <ul> <li>Create a popuptemplate object and add a title</li> </ul> <pre><code>const template = { title:\"Solar Panel in Providence\"};\n</code></pre> <ul> <li>Add content to the PopupTemplate</li> </ul> <p>Please add two fields <code>date_built</code> and <code>solar_area</code> based on sample code</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Widgets","title":"Widgets\u00b6","text":"<p>The LayerList widget display a list of layers and switch/off their visibility.</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Practice-4:-Add-LayerList","title":"Practice 4: Add LayerList\u00b6","text":"<p>LayerList widget display a list of layers for your map</p> <p>Add title property to FeatureLayer can change the layer's name in LayerList</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Legend","title":"Legend\u00b6","text":"<ul> <li>Create a legend instance</li> <li>Add legend to view</li> </ul>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Practice-5:-Add-Legend","title":"Practice 5: Add Legend\u00b6","text":"<p>Sample Code</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Renderers","title":"Renderers\u00b6","text":"<ul> <li>Define a set of symbols to use for the layer</li> <li>Set the rules on how the symbols are used</li> </ul> <p>First, check the render for Solar Panel in ArcGIS Online</p> <p>Renderers can be accomplished by various property</p>"},{"location":"Lectures/Week%2011_JavaScript/ArcGIS_JavaScript/#Practice-6:-Add-Renderers","title":"Practice 6: Add Renderers\u00b6","text":"<p>Sample Code</p>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/","title":"Week 10 Plotly","text":"Week 10: Plotly in Python       &amp;nbsp &amp;nbsp  <ul> <li>Install Package in a Anaconda virtual environment</li> </ul> <pre><code>pip install plotly\npip install dash\npip install pandas\n</code></pre> In\u00a0[1]: Copied! <pre>import pandas as pd\nimport os\nimport dash\nfrom dash import dcc, Dash, html, dash_table, callback, Output, Input\nfrom dash.dependencies import Input, Output\nimport plotly.express as px\nfrom dash import dcc\n</pre> import pandas as pd import os import dash from dash import dcc, Dash, html, dash_table, callback, Output, Input from dash.dependencies import Input, Output import plotly.express as px from dash import dcc  In\u00a0[3]: Copied! <pre>df = pd.read_csv('service_311.csv', encoding='ISO-8859-1')\n</pre> df = pd.read_csv('service_311.csv', encoding='ISO-8859-1') <ul> <li>This line is known as the Dash constructor and is responsible for initializing your app. It is almost always the same for any Dash app you create.</li> </ul> <pre><code>app = Dash()\n</code></pre> <ul> <li>Dash component</li> </ul> <p>Displayed in the web browser and write it as a list</p> <p>The Div has a few properties, such as children, which we use to add text content to the page: \"Hello World\"</p> <pre><code>app.layout = [html.Div(children='Hello World')]\n</code></pre> <ul> <li>Running App</li> </ul> <p>debug = True enables some features for development when running a Dash application</p> <ol> <li>Automatic Reload</li> <li>Detailed Error Messages</li> <li>Development Features:</li> </ol> <pre><code>if __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> In\u00a0[\u00a0]: Copied! <pre>app = Dash()\n\napp.layout = html.Div(children='Hello World', style = {'color':'red'})\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</pre> app = Dash()  app.layout = html.Div(children='Hello World', style = {'color':'red'})  if __name__ == '__main__':     app.run(debug=True) In\u00a0[\u00a0]: Copied! <pre>df = pd.read_csv('service_31101.csv')\n\napp = Dash()\n\n# App layout\napp.layout = [\n    html.Div(children='My First App with Data'),\n    dash_table.DataTable(data=df.to_dict('records'), page_size=10)\n]\n\n# Run the app\nif __name__ == '__main__':\n    app.run(debug=True)\n</pre> df = pd.read_csv('service_31101.csv')  app = Dash()  # App layout app.layout = [     html.Div(children='My First App with Data'),     dash_table.DataTable(data=df.to_dict('records'), page_size=10) ]  # Run the app if __name__ == '__main__':     app.run(debug=True) <ul> <li>Import dcc module (DCC stands for Dash Core Components), this module includes a Graph component called dcc. Graph</li> </ul> <p>dcc.Graph is used to do data visualization</p> <ul> <li>Using plotly.express library to built the histogram chart and assign it to the figure property.</li> </ul> <pre><code>dcc.Graph(figure=px.histogram(df, x = \"weekday\", barmode='relative', histfunc='count',color='reason'))\n</code></pre> In\u00a0[\u00a0]: Copied! <pre>df = pd.read_csv('service_31101.csv')\n\napp = Dash()\n\n# App layout\napp.layout = [\n    html.Div(children='My First App with Data'),\n    dash_table.DataTable(data=df.to_dict('records'), page_size=10),\n    dcc.Graph(figure = px.histogram(df, x = \"weekday\", barmode='relative',histfunc='count',color='reason'))\n]\n\n# Run the app\nif __name__ == '__main__':\n    app.run(debug=True)\n</pre> df = pd.read_csv('service_31101.csv')  app = Dash()  # App layout app.layout = [     html.Div(children='My First App with Data'),     dash_table.DataTable(data=df.to_dict('records'), page_size=10),     dcc.Graph(figure = px.histogram(df, x = \"weekday\", barmode='relative',histfunc='count',color='reason')) ]  # Run the app if __name__ == '__main__':     app.run(debug=True) In\u00a0[\u00a0]: Copied! <pre>df = pd.read_csv('service_311.csv')\n\napp = Dash()\n\n# App layout\napp.layout = [\n    html.Div(children='My First App with Data'),\n    dash_table.DataTable(data=df.to_dict('records'), page_size=10),\n    dcc.RadioItems(options=['daytime', 'nighttime', 'All'], value='All', id='controls-and-radio-item'),\n    dcc.Graph(figure = {}, id = \"controls-and-graph\")\n]\n\n@callback(\n    Output(component_id='controls-and-graph', component_property='figure'),\n    Input(component_id='controls-and-radio-item', component_property='value')\n)\n\ndef update_graph(time_selected):\n    if time_selected == 'All':\n        filter_df = df\n    else:\n        filter_df = df[df['time_of_day'] == time_selected]\n        \n    fig = px.histogram(filter_df, x = \"weekday\", barmode='relative',histfunc='count',color='reason')\n\n    return fig    \n        \n# Run the app\nif __name__ == '__main__':\n    app.run(debug=True)\n</pre> df = pd.read_csv('service_311.csv')  app = Dash()  # App layout app.layout = [     html.Div(children='My First App with Data'),     dash_table.DataTable(data=df.to_dict('records'), page_size=10),     dcc.RadioItems(options=['daytime', 'nighttime', 'All'], value='All', id='controls-and-radio-item'),     dcc.Graph(figure = {}, id = \"controls-and-graph\") ]  @callback(     Output(component_id='controls-and-graph', component_property='figure'),     Input(component_id='controls-and-radio-item', component_property='value') )  def update_graph(time_selected):     if time_selected == 'All':         filter_df = df     else:         filter_df = df[df['time_of_day'] == time_selected]              fig = px.histogram(filter_df, x = \"weekday\", barmode='relative',histfunc='count',color='reason')      return fig              # Run the app if __name__ == '__main__':     app.run(debug=True) <ul> <li>Title</li> </ul> <pre><code>style={'textAlign': 'center', 'color': 'blue', 'fontSize': 30}\n</code></pre> <ul> <li>Table</li> </ul> <pre><code>html.Div(children =dash_table.DataTable(data=df.to_dict('records'), page_size=10, style_table={'overflowX': 'auto'})),\n</code></pre>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#1.-Download-packages","title":"1. Download packages\u00b6","text":""},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#2.-Introduction","title":"2. Introduction\u00b6","text":""},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#2.1-Plotly","title":"2.1 Plotly\u00b6","text":"<p>Plotly is powerful, open-source graphing library that makes it easy to create interactive, visually appealing charts and dashboards for data visualization</p>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#2.2-Dash","title":"2.2 Dash\u00b6","text":"<p>Dash is an open-source framework for building analytical applications, with no Javascript required, and it is tightly integrated with the Plotly graphing library.</p>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#3.-Import-Packages","title":"3. Import Packages\u00b6","text":""},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#4.-Data","title":"4. Data\u00b6","text":"<p>311 Service Request (https://data.boston.gov/dataset/311-service-requests)</p>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#5.-A-simple-Dash-App:-Hello-World","title":"5. A simple Dash App: Hello World\u00b6","text":""},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#5.1-Code-Break-Down","title":"5.1 Code Break Down\u00b6","text":""},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#5.2-Open-app-Locally","title":"5.2 Open app Locally\u00b6","text":"<ul> <li>Create app.py</li> <li>Copy above code to app.py</li> <li>Right click and select 'Run Python File in Terminal'</li> </ul>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#6.-Dash-App-Connecting-to-Data","title":"6. Dash App Connecting to Data\u00b6","text":""},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#6.1-Incorporate-data","title":"6.1 Incorporate data\u00b6","text":"<p>We can use many approaches to connect data to an app: APIs, external database, local file, Json file, and more</p> <p>In below example, we highlight one of the most common ways of incorporating data fram a CSV sheet.</p>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#6.2-Code-Breakdown","title":"6.2 Code Breakdown\u00b6","text":"<ul> <li>Read the CSV sheet into a pandas dataframe</li> </ul> <p>If data is on your computer, make sure to save it in the same folder that contains the app.py file</p> <pre><code>df = pd.read_csv('service_31101.csv')\n</code></pre> <ul> <li>Apart from page title, we add the DataTable component and read data into the table</li> </ul> <p>Converts the DataFrame into a format compatible with DataTable. to_dict('records') turns each row in df into a dictionary Limits the display to 10 rows per page</p> <pre><code>dash_table.DataTable(data=df.to_dict('records'), page_size=10)\n</code></pre> <p>Example:</p> Name Age City Alice 24 New York Bob 30 Los Angeles <pre><code>[\n    {'Name': 'Alice', 'Age': 24, 'City': 'New York'},\n    {'Name': 'Bob', 'Age': 30, 'City': 'Los Angeles'}\n]\n</code></pre>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#7.-Visualizing-Data","title":"7. Visualizing Data\u00b6","text":"<p>The Plotly graphing library has more than 50 chart types to use.</p>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#8.-Controls-and-Callbacks","title":"8. Controls and Callbacks\u00b6","text":"<p>Add interactive function to the map by using the callback and function</p> <ul> <li>Add radio button to the app layout</li> </ul> <p>dcc.RadioItems display a set up radio buttons that let users select on option at time</p> <pre><code>dcc.RadioItems(options=['daytime', 'nighttime'], value='daytime', id='controls-and-radio-item')\n\n</code></pre> <ul> <li>Build the callback to create the interaction between the radio button and hisogram chart</li> </ul> <ol> <li>callback update app components automatically when specified inputs change.</li> <li>callback has two components:  2.1 Input(): callback is triggered wheven the component inside change  2.2 Output(): callback update the propoerty the component</li> </ol> <p>@callback(     Output(component_id='controls-and-graph', component_property='figure'),     Input(component_id='controls-and-radio-item', component_property='value') ) def update_graph(col_chosen):     fig = px.histogram(df, x='continent', y=col_chosen, histfunc='avg')     return fig</p> <ul> <li><p>Add Callabck function to update the app  Using if-else to update the app</p> </li> <li><p>Empty dcc.Graph Make the dcc.graph empty at the first time</p> </li> </ul>"},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#9.-Styling-the-app","title":"9. Styling the app\u00b6","text":""},{"location":"Lectures/Week10_Plotly/Week10_plotly_instructor/#HTML-and-CSS","title":"HTML and CSS\u00b6","text":""},{"location":"Lectures/Week10_Plotly/app/","title":"App","text":"In\u00a0[\u00a0]: Copied! <pre>import pandas as pd\nimport os\nimport dash\nfrom dash import dcc, Dash, html, dash_table, callback, Output, Input\nfrom dash.dependencies import Input, Output\nimport plotly.express as px\nfrom dash import dcc\n</pre> import pandas as pd import os import dash from dash import dcc, Dash, html, dash_table, callback, Output, Input from dash.dependencies import Input, Output import plotly.express as px from dash import dcc In\u00a0[\u00a0]: Copied! <pre>df = pd.read_csv('D:\\\\github_gisynw\\\\ssj-30262\\\\docs\\\\Lectures\\\\Week10_Plotly\\\\service_311.csv',\n                 encoding='ISO-8859-1')\n</pre> df = pd.read_csv('D:\\\\github_gisynw\\\\ssj-30262\\\\docs\\\\Lectures\\\\Week10_Plotly\\\\service_311.csv',                  encoding='ISO-8859-1') In\u00a0[\u00a0]: Copied! <pre>app = Dash()\n</pre> app = Dash() In\u00a0[\u00a0]: Copied! <pre>app.layout = html.Div(\n                [html.Div(children='Hello World', style = {'color':'red'}),\n             dash_table.DataTable(data = df.to_dict('records'), page_size=10),\n             dcc.Graph(figure=px.histogram(df, x = 'weekday', barmode='relative', \n                                           histfunc='count', color='reason'), id = 'graph_his' ),\n             dcc.RadioItems(options=['daytime', 'nighttime', 'All'], value='All', id = 'radio_button')    ]\n             )\n</pre> app.layout = html.Div(                 [html.Div(children='Hello World', style = {'color':'red'}),              dash_table.DataTable(data = df.to_dict('records'), page_size=10),              dcc.Graph(figure=px.histogram(df, x = 'weekday', barmode='relative',                                             histfunc='count', color='reason'), id = 'graph_his' ),              dcc.RadioItems(options=['daytime', 'nighttime', 'All'], value='All', id = 'radio_button')    ]              ) In\u00a0[\u00a0]: Copied! <pre>@callback(\n    Output(component_id='graph_his', component_property='figure'),\n    Input(component_id='radio_button', component_property='value')\n)\n</pre> @callback(     Output(component_id='graph_his', component_property='figure'),     Input(component_id='radio_button', component_property='value') ) In\u00a0[\u00a0]: Copied! <pre>def update_graph(time):\n    if time == \"All\":\n        filter_df = df\n    else:\n        filter_df = df[df['time_of_day'] == time ]\n    \n    fig = px.histogram(filter_df, x = 'weekday', barmode='relative', \n                                           histfunc='count', color='reason')\n    return fig\n</pre> def update_graph(time):     if time == \"All\":         filter_df = df     else:         filter_df = df[df['time_of_day'] == time ]          fig = px.histogram(filter_df, x = 'weekday', barmode='relative',                                             histfunc='count', color='reason')     return fig In\u00a0[\u00a0]: Copied! <pre>if __name__ == '__main__':\n    app.run(debug=True)\n</pre> if __name__ == '__main__':     app.run(debug=True)"},{"location":"Lectures/Week10_Plotly/test/","title":"Test","text":"In\u00a0[\u00a0]: Copied! <pre>import pandas as pd\nimport os\nimport dash\nfrom dash import dcc, Dash, html, dash_table, callback, Output, Input\nfrom dash.dependencies import Input, Output\nimport plotly.express as px\nfrom dash import dcc\n</pre> import pandas as pd import os import dash from dash import dcc, Dash, html, dash_table, callback, Output, Input from dash.dependencies import Input, Output import plotly.express as px from dash import dcc In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>df = pd.read_csv(r'D:\\ssj-30262\\docs\\Lectures\\Week10_Plotly\\service_311.csv', encoding='ISO-8859-1')\n</pre> df = pd.read_csv(r'D:\\ssj-30262\\docs\\Lectures\\Week10_Plotly\\service_311.csv', encoding='ISO-8859-1') In\u00a0[\u00a0]: Copied! <pre>app = Dash()\n</pre> app = Dash() In\u00a0[\u00a0]: Copied! <pre># App layout\napp.layout = html.Div( [\n    html.Div(children='My First App with Data',\n              style={'textAlign': 'center', 'color': 'blue', 'fontSize': 30}),\n    \n    html.Div(children =dash_table.DataTable(data=df.to_dict('records'), page_size=10, style_table={'overflowX': 'auto'})),\n    \n    dcc.RadioItems(options=['daytime', 'nighttime', 'All'], value='All', id='controls-and-radio-item'),\n    dcc.Graph(figure = {}, id = \"controls-and-graph\")\n])\n</pre> # App layout app.layout = html.Div( [     html.Div(children='My First App with Data',               style={'textAlign': 'center', 'color': 'blue', 'fontSize': 30}),          html.Div(children =dash_table.DataTable(data=df.to_dict('records'), page_size=10, style_table={'overflowX': 'auto'})),          dcc.RadioItems(options=['daytime', 'nighttime', 'All'], value='All', id='controls-and-radio-item'),     dcc.Graph(figure = {}, id = \"controls-and-graph\") ]) In\u00a0[\u00a0]: Copied! <pre>@callback(\n    Output(component_id='controls-and-graph', component_property='figure'),\n    Input(component_id='controls-and-radio-item', component_property='value')\n)\n</pre> @callback(     Output(component_id='controls-and-graph', component_property='figure'),     Input(component_id='controls-and-radio-item', component_property='value') ) In\u00a0[\u00a0]: Copied! <pre>def update_graph(time_selected):\n    if time_selected == 'All':\n        filter_df = df\n    else:\n        filter_df = df[df['time_of_day'] == time_selected]\n        \n    fig = px.histogram(filter_df, x = \"weekday\", barmode='relative',histfunc='count',color='reason')\n\n    return fig\n</pre> def update_graph(time_selected):     if time_selected == 'All':         filter_df = df     else:         filter_df = df[df['time_of_day'] == time_selected]              fig = px.histogram(filter_df, x = \"weekday\", barmode='relative',histfunc='count',color='reason')      return fig     In\u00a0[\u00a0]: Copied! <pre># Run the app\nif __name__ == '__main__':\n    app.run(debug=True)\n</pre> # Run the app if __name__ == '__main__':     app.run(debug=True)"},{"location":"Lectures/Week12/geemap/","title":"Week 12 geemap in python","text":"Week 12: geemap in Python       &amp;nbsp &amp;nbsp  In\u00a0[\u00a0]: Copied! <pre>%pip install -U geemap\n</pre> %pip install -U geemap In\u00a0[\u00a0]: Copied! <pre>import ee\n\nee.Authenticate()\n</pre> import ee  ee.Authenticate() In\u00a0[\u00a0]: Copied! <pre>from google.colab import userdata\nee.Initialize(project = userdata.get('ee_project'))\n</pre> from google.colab import userdata ee.Initialize(project = userdata.get('ee_project')) In\u00a0[\u00a0]: Copied! <pre>import geemap\n\nMap = geemap.Map(center = [42.2602, -71.7980], zoom = 11)\nMap\n</pre> import geemap  Map = geemap.Map(center = [42.2602, -71.7980], zoom = 11) Map <p>gee dataset</p> <p>Earth Engine Data Catelog</p> <p>ee.ImageCollection</p> <p>In Google Earth Engine, an ee.ImageCollection is a data structure used to handle a collection of multiple ee.Image objects. It\u2019s often used for time-series analysis, multi-temporal composites, or batch processing of satellite imagery over a specified region</p> <p>ee.Image constructor</p> In\u00a0[\u00a0]: Copied! <pre>landsat_9 = ee.ImageCollection('LANDSAT/LC09/C02/T1_L2')\nlandsat_9.size().getInfo()\n</pre> landsat_9 = ee.ImageCollection('LANDSAT/LC09/C02/T1_L2') landsat_9.size().getInfo() <p>aggregate_array</p> In\u00a0[\u00a0]: Copied! <pre>landsat_9.limit(10).aggregate_array('system:index').getInfo()\n</pre> landsat_9.limit(10).aggregate_array('system:index').getInfo() In\u00a0[\u00a0]: Copied! <pre>single_image = ee.Image('LANDSAT/LC09/C02/T1_L2/LC09_001004_20220709').select(\n    ['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7']\n)\n</pre> single_image = ee.Image('LANDSAT/LC09/C02/T1_L2/LC09_001004_20220709').select(     ['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7'] ) In\u00a0[\u00a0]: Copied! <pre>geemap.image_props(single_image).getInfo()\n</pre> geemap.image_props(single_image).getInfo() In\u00a0[\u00a0]: Copied! <pre>single_image.geometry()\n</pre> single_image.geometry() In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map(center = [78.04207655029894,-10.322619721660091], zoom = 6)\n\nsingle_image = ee.Image('LANDSAT/LC09/C02/T1_L2/LC09_001004_20220709').select(\n    ['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7']\n)\n\nlandsat_vis = {'bands': ['SR_B4', 'SR_B3', 'SR_B2'],'gamma': 1.4}\n\nMap.addLayer(single_image, landsat_vis, \"Landsat\")\nMap\n</pre> Map = geemap.Map(center = [78.04207655029894,-10.322619721660091], zoom = 6)  single_image = ee.Image('LANDSAT/LC09/C02/T1_L2/LC09_001004_20220709').select(     ['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7'] )  landsat_vis = {'bands': ['SR_B4', 'SR_B3', 'SR_B2'],'gamma': 1.4}  Map.addLayer(single_image, landsat_vis, \"Landsat\") Map In\u00a0[\u00a0]: Copied! <pre>location = ee.Geometry.Point([-71.80613, 42.27189])\n</pre> location = ee.Geometry.Point([-71.80613, 42.27189]) In\u00a0[\u00a0]: Copied! <pre>landsat9_subset = landsat_9.filterBounds(location).filterMetadata('CLOUD_COVER', 'less_than', 30)\nlandsat9_subset.size().getInfo()\n</pre> landsat9_subset = landsat_9.filterBounds(location).filterMetadata('CLOUD_COVER', 'less_than', 30) landsat9_subset.size().getInfo() In\u00a0[\u00a0]: Copied! <pre>landsat9_subset.limit(10).aggregate_array('system:index').getInfo()\n</pre> landsat9_subset.limit(10).aggregate_array('system:index').getInfo() In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map(center = [42.27189, -71.80613], zoom = 6)\n\nsingle_image = ee.Image('LANDSAT/LC09/C02/T1_L2/LC09_012031_20220722').select(\n    ['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7']\n)\n\nlandsat_vis = {'bands': ['SR_B3', 'SR_B2', 'SR_B1'],'gamma': 1.4}\n\nMap.addLayer(single_image, landsat_vis, \"Landsat\")\nMap\n</pre> Map = geemap.Map(center = [42.27189, -71.80613], zoom = 6)  single_image = ee.Image('LANDSAT/LC09/C02/T1_L2/LC09_012031_20220722').select(     ['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7'] )  landsat_vis = {'bands': ['SR_B3', 'SR_B2', 'SR_B1'],'gamma': 1.4}  Map.addLayer(single_image, landsat_vis, \"Landsat\") Map In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map(center=[12, 69], zoom=3)\ndem = ee.Image('USGS/SRTMGL1_003')\nvis_params = {\n    'min': 0,\n    'max': 4000,\n    'palette': ['006633', 'E5FFCC', '662A00', 'D8D8D8', 'F5F5F5'],\n}\nMap.addLayer(dem, vis_params, 'SRTM DEM')\nMap\n</pre> Map = geemap.Map(center=[12, 69], zoom=3) dem = ee.Image('USGS/SRTMGL1_003') vis_params = {     'min': 0,     'max': 4000,     'palette': ['006633', 'E5FFCC', '662A00', 'D8D8D8', 'F5F5F5'], } Map.addLayer(dem, vis_params, 'SRTM DEM') Map In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map(center = [42.27189, -71.80613], zoom = 6)\nstates = ee.FeatureCollection(\"TIGER/2016/Roads\")\n\nvis_params = {\n    'color': '0000FFFF',\n    'width': 1,\n    'lineType': 'solid',\n}\n\nMap.addLayer(states.style(**vis_params), {}, \"US Roads\")\nMap\n</pre> Map = geemap.Map(center = [42.27189, -71.80613], zoom = 6) states = ee.FeatureCollection(\"TIGER/2016/Roads\")  vis_params = {     'color': '0000FFFF',     'width': 1,     'lineType': 'solid', }  Map.addLayer(states.style(**vis_params), {}, \"US Roads\") Map In\u00a0[\u00a0]: Copied! <pre>labels = ['US Roads']\n\n# colors can be defined using either hex code or RGB (0-255, 0-255, 0-255)\ncolors = ['#0000FF']\n# legend_colors = [(255, 0, 0), (127, 255, 0), (127, 18, 25), (36, 70, 180), (96, 68 123)]\n\nMap.add_legend(\n    labels=labels, colors=colors, position='bottomright'\n)\nMap\n</pre> labels = ['US Roads']  # colors can be defined using either hex code or RGB (0-255, 0-255, 0-255) colors = ['#0000FF'] # legend_colors = [(255, 0, 0), (127, 255, 0), (127, 18, 25), (36, 70, 180), (96, 68 123)]  Map.add_legend(     labels=labels, colors=colors, position='bottomright' ) Map In\u00a0[\u00a0]: Copied! <pre>from geemap.legends import builtin_legends\n\nfor legend in builtin_legends:\n    print(legend)\n</pre> from geemap.legends import builtin_legends  for legend in builtin_legends:     print(legend) In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map(center=[40, -100], zoom=4)\nMap.add_basemap('HYBRID')\n\nnlcd = ee.Image('USGS/NLCD_RELEASES/2019_REL/NLCD/2019')\nlandcover = nlcd.select('landcover')\n\nMap.addLayer(landcover, {}, 'NLCD Land Cover 2019')\nMap.add_legend(\n    title=\"NLCD Land Cover Classification\", builtin_legend='NLCD', height='465px'\n)\nMap\n</pre> Map = geemap.Map(center=[40, -100], zoom=4) Map.add_basemap('HYBRID')  nlcd = ee.Image('USGS/NLCD_RELEASES/2019_REL/NLCD/2019') landcover = nlcd.select('landcover')  Map.addLayer(landcover, {}, 'NLCD Land Cover 2019') Map.add_legend(     title=\"NLCD Land Cover Classification\", builtin_legend='NLCD', height='465px' ) Map In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map()\n\ndataset = ee.ImageCollection(\"ESA/WorldCover/v100\").first()\nMap.addLayer(dataset, {'bands': ['Map']}, \"ESA Landcover\")\n\nee_class_table = \"\"\"\nValue\tColor\tDescription\n10\t006400\tTrees\n20\tffbb22\tShrubland\n30\tffff4c\tGrassland\n40\tf096ff\tCropland\n50\tfa0000\tBuilt-up\n60\tb4b4b4\tBarren / sparse vegetation\n70\tf0f0f0\tSnow and ice\n80\t0064c8\tOpen water\n90\t0096a0\tHerbaceous wetland\n95\t00cf75\tMangroves\n100\tfae6a0\tMoss and lichen\n\"\"\"\n\nlegend_dict = geemap.legend_from_ee(ee_class_table)\nMap.add_legend(title=\"ESA Land Cover\", legend_dict=legend_dict)\nMap\n</pre> Map = geemap.Map()  dataset = ee.ImageCollection(\"ESA/WorldCover/v100\").first() Map.addLayer(dataset, {'bands': ['Map']}, \"ESA Landcover\")  ee_class_table = \"\"\" Value\tColor\tDescription 10\t006400\tTrees 20\tffbb22\tShrubland 30\tffff4c\tGrassland 40\tf096ff\tCropland 50\tfa0000\tBuilt-up 60\tb4b4b4\tBarren / sparse vegetation 70\tf0f0f0\tSnow and ice 80\t0064c8\tOpen water 90\t0096a0\tHerbaceous wetland 95\t00cf75\tMangroves 100\tfae6a0\tMoss and lichen \"\"\"  legend_dict = geemap.legend_from_ee(ee_class_table) Map.add_legend(title=\"ESA Land Cover\", legend_dict=legend_dict) Map In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map()\ndem = ee.Image('USGS/SRTMGL1_003')\nvis_params = {\n    'min': 0,\n    'max': 4000,\n    'palette': ['006633', 'E5FFCC', '662A00', 'D8D8D8', 'F5F5F5']\n}\n\nMap.addLayer(dem, vis_params, 'SRTM DEM')\n\nMap.add_colorbar(vis_params, label=\"Elevation (m)\", layer_name=\"SRTM DEM\")\n\nMap\n</pre> Map = geemap.Map() dem = ee.Image('USGS/SRTMGL1_003') vis_params = {     'min': 0,     'max': 4000,     'palette': ['006633', 'E5FFCC', '662A00', 'D8D8D8', 'F5F5F5'] }  Map.addLayer(dem, vis_params, 'SRTM DEM')  Map.add_colorbar(vis_params, label=\"Elevation (m)\", layer_name=\"SRTM DEM\")  Map In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map(center=[40, -100], zoom=4, add_google_map=False)\nstates = ee.FeatureCollection(\"TIGER/2016/States\")\nstyle = {'color': 'black', 'fillColor': \"00000000\"}\nMap.addLayer(states.style(**style), {}, \"US States\")\n\nMap.add_labels(\n    data=states,\n    column=\"NAME\",\n    font_size=\"12pt\",\n    font_color=\"blue\",\n    font_family=\"arial\",\n    font_weight=\"bold\",\n    draggable=True,\n)\nMap\n</pre> Map = geemap.Map(center=[40, -100], zoom=4, add_google_map=False) states = ee.FeatureCollection(\"TIGER/2016/States\") style = {'color': 'black', 'fillColor': \"00000000\"} Map.addLayer(states.style(**style), {}, \"US States\")  Map.add_labels(     data=states,     column=\"NAME\",     font_size=\"12pt\",     font_color=\"blue\",     font_family=\"arial\",     font_weight=\"bold\",     draggable=True, ) Map In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map(center=[40, -100], zoom=4)\ncollection = ee.ImageCollection('USGS/NLCD_RELEASES/2019_REL/NLCD').select('landcover')\nvis_params = {'bands': ['landcover']}\nyears = collection.aggregate_array('system:index').getInfo()\nyears\n</pre> Map = geemap.Map(center=[40, -100], zoom=4) collection = ee.ImageCollection('USGS/NLCD_RELEASES/2019_REL/NLCD').select('landcover') vis_params = {'bands': ['landcover']} years = collection.aggregate_array('system:index').getInfo() years In\u00a0[\u00a0]: Copied! <pre>Map.ts_inspector(\n    left_ts=collection,\n    right_ts=collection,\n    left_names=years,\n    right_names=years,\n    left_vis=vis_params,\n    right_vis=vis_params,\n    width='80px',\n)\nMap\n</pre> Map.ts_inspector(     left_ts=collection,     right_ts=collection,     left_names=years,     right_names=years,     left_vis=vis_params,     right_vis=vis_params,     width='80px', ) Map In\u00a0[\u00a0]: Copied! <pre>Map = geemap.Map(center=[40, -100], zoom=4)\ncollection = ee.ImageCollection('MODIS/006/MOD44B').select('Percent_Tree_Cover')\nvis_params = {\n    'min': 0,\n    'max': 100,\n    'palette': ['bbe029', '0a9501', '074b03']\n}\nyears = collection.aggregate_array('system:index').getInfo()\nyears\n</pre> Map = geemap.Map(center=[40, -100], zoom=4) collection = ee.ImageCollection('MODIS/006/MOD44B').select('Percent_Tree_Cover') vis_params = {     'min': 0,     'max': 100,     'palette': ['bbe029', '0a9501', '074b03'] } years = collection.aggregate_array('system:index').getInfo() years In\u00a0[\u00a0]: Copied! <pre>Map.addLayer(collection, vis_params)\nMap.ts_inspector(\n    left_ts=collection,\n    right_ts=collection,\n    left_names=years,\n    right_names=years,\n    left_vis=vis_params,\n    right_vis=vis_params,\n    width='80px',\n)\n\nMap.add_colorbar(vis_params, label=\"Percent_Tree_Cover\", layer_name=\"Percent_Tree_Cover\")\nMap\n</pre> Map.addLayer(collection, vis_params) Map.ts_inspector(     left_ts=collection,     right_ts=collection,     left_names=years,     right_names=years,     left_vis=vis_params,     right_vis=vis_params,     width='80px', )  Map.add_colorbar(vis_params, label=\"Percent_Tree_Cover\", layer_name=\"Percent_Tree_Cover\") Map"},{"location":"Lectures/Week12/geemap/#What-is-Google-Earth-Engine-(GEE)","title":"What is Google Earth Engine (GEE)\u00b6","text":"<p>Google Earth Engine (GEE) is a cloud-based platform developed by Google for processing and analyzing geospatial data at a planetary scale. It enables users to analyze and visualize vast amounts of satellite imagery and geospatial datasets using a web-based JavaScript API or a Python API. GEE is widely used for environmental and climate research, urban planning, natural resource management, and disaster response, among other fields.</p>"},{"location":"Lectures/Week12/geemap/#What-is-geemap","title":"What is geemap\u00b6","text":"<p>Geemap is a Python package that extends the functionality of Google Earth Engine (GEE), making it easier for users to interact with GEE data and perform spatial analysis within a Jupyter Notebook or other Python environments</p>"},{"location":"Lectures/Week12/geemap/#Onlnie-Learning-Source","title":"Onlnie Learning Source\u00b6","text":"<p>geemap online textbook</p>"},{"location":"Lectures/Week12/geemap/#Installing-geemap","title":"Installing geemap\u00b6","text":"<ol> <li>Installing with conda</li> <li>Installing with pip</li> <li>Installing from source</li> </ol>"},{"location":"Lectures/Week12/geemap/#Earth-Engine-authentication","title":"Earth Engine authentication\u00b6","text":"<ol> <li><p>Create a google engine account</p> </li> <li><p>Click 'Get Started to create the project'</p> </li> <li><p>Go to google cloud console to check your project's information</p> </li> <li><p>Create secret key with 'ID' of your project</p> </li> </ol>"},{"location":"Lectures/Week12/geemap/#Initialize-a-project","title":"Initialize a project\u00b6","text":"<p>https://console.cloud.google.com/cloud-resource-manager?walkthrough_id=resource-manager--create-project#step_index=1</p> <p>Replace the key value for 'ee_project' key in Secrets</p>"},{"location":"Lectures/Week12/geemap/#Load-basemap","title":"Load basemap\u00b6","text":""},{"location":"Lectures/Week12/geemap/#Metadata-about-Earth-Engine-Data","title":"Metadata about Earth Engine Data\u00b6","text":""},{"location":"Lectures/Week12/geemap/#Plot-Satellite-iamge","title":"Plot Satellite iamge\u00b6","text":"<p>Image Visualization</p> <p>Specify the bands combination</p> <p>Image.geometry</p> <p>This list will contain 21 coordinate pairs, each defining a point on the boundary of the image. This data can help you understand the precise extent of the image\u2019s coverage area in geographic space.</p>"},{"location":"Lectures/Week12/geemap/#Using-the-plot-tool","title":"Using the plot tool\u00b6","text":"<p>ee.Geometry.Point</p> <p>Define the center point of your study area in [x,y]</p>"},{"location":"Lectures/Week12/geemap/#Visualizing-raster-data","title":"Visualizing raster data\u00b6","text":""},{"location":"Lectures/Week12/geemap/#Single-band-images","title":"Single-band images\u00b6","text":"<p>Explore the pre-defined tool</p>"},{"location":"Lectures/Week12/geemap/#Visualizing-vector-data","title":"Visualizing vector data\u00b6","text":"<p>Search TIGER keyword in data catalog</p> <p>Define style of vector data</p>"},{"location":"Lectures/Week12/geemap/#Creating-legends","title":"Creating legends\u00b6","text":""},{"location":"Lectures/Week12/geemap/#Custom-legends---vector","title":"Custom legends - vector\u00b6","text":""},{"location":"Lectures/Week12/geemap/#Built-in-legends","title":"Built-in legends\u00b6","text":""},{"location":"Lectures/Week12/geemap/#Earth-Engine-class-table","title":"Earth Engine class table\u00b6","text":"<p>ESA WorldCover data</p>"},{"location":"Lectures/Week12/geemap/#Creating-color-bars","title":"Creating color bars\u00b6","text":"<p>Adjust palette in tools</p>"},{"location":"Lectures/Week12/geemap/#Displaying-labels","title":"Displaying labels\u00b6","text":"<p>US Census States 2016</p>"},{"location":"Lectures/Week12/geemap/#Timeseries-inspector","title":"Timeseries inspector\u00b6","text":""},{"location":"Lectures/Week12/geemap/#Practice-1:-Create-a-Time-Series-Slider","title":"Practice 1: Create a Time Series Slider\u00b6","text":"<p>Data Source</p>"},{"location":"Lectures/Week13/Lecture/","title":"Week 13 ArcGIS","text":"Week 13: Web Mapping: Dashboards, StoryMaps, and ArcGIS Hub       &amp;nbsp &amp;nbsp  <ol> <li><p>It refers to a built-in, user-friendly tool provided by the platform for creating and viewing data-driven dashboards directly from a web interface.</p> </li> <li><p>Provide key information to yoru data on a single screen</p> </li> <li><p>ArcGIS Online</p> <p>3.1 Included with your ArcGIS organization  3.2 Updated with ArcGIS Online</p> </li> <li><p>ArcGIS Enterprise  4.1 Available at 10.6 release</p> </li> </ol> <ul> <li>Learning Objectives</li> </ul> <ol> <li>Understand what ArcGIS Hub is and how it enables collaboration and engagement.</li> <li>Explore the key features and benefits of ArcGIS Hub.</li> <li>Learn the basics of creating an ArcGIS Hub site.</li> <li>Recognize real-world use cases to inspire innovative applications.</li> </ol> <ol> <li>Introduction to ArcGIS Hub</li> </ol> <ul> <li>What is ArcGIS Hub?<ul> <li>A cloud-based platform for creating community engagement initiatives.</li> <li>Integrates GIS technology with open data sharing and public collaboration.</li> </ul> </li> <li>Why Use ArcGIS Hub?<ul> <li>Facilitates data transparency and public participation.</li> <li>Centralizes information for easy access by stakeholders.</li> <li>Encourages civic engagement in urban planning, disaster response, or social projects.</li> </ul> </li> </ul>"},{"location":"Lectures/Week13/Lecture/#Operational-Dashboard-for-ArcGIS","title":"Operational Dashboard for ArcGIS\u00b6","text":""},{"location":"Lectures/Week13/Lecture/#Built-in-functionality","title":"Built-in functionality\u00b6","text":"<ol> <li><p>ready to use data visualizations</p> <ul> <li>Map, Legend</li> <li>Serial chart, Pie chart</li> <li>Indicator, Gauge</li> <li>List, Details</li> <li>Embedded content, Rich text</li> </ul> </li> <li><p>Various tools and interactivity options</p> <ul> <li>Tools that interact with the map (e.g., layer visibility,bookmarks)</li> <li>Dashboard elements configured to communicate with each other</li> </ul> </li> </ol>"},{"location":"Lectures/Week13/Lecture/#Patterns-of-use","title":"Patterns of use\u00b6","text":"<ul> <li>Monitor and manage the operations/assets</li> <li>Event Management</li> <li>Summaries</li> <li>Many, Many others ...</li> </ul>"},{"location":"Lectures/Week13/Lecture/#Example","title":"Example\u00b6","text":"<p>COVID-19 Dashboard</p> <p>West Virginia Flood Dashboards</p> <p>Earthquake Data Dashboard</p> <p>ArcGIS Dashboards Gallery</p>"},{"location":"Lectures/Week13/Lecture/#Start-a-Dashboard","title":"Start a Dashboard\u00b6","text":"<ol> <li>Search 'Crime Incidents in Census Tracts City of Dallas' data in ArcGIS Online (AGO)</li> <li>Save as a webmap to your AGO</li> <li>Create a Dashboard</li> </ol>"},{"location":"Lectures/Week13/Lecture/#Online-Learning-Resources","title":"Online Learning Resources\u00b6","text":"<p>Get Started with ArcGIS Dashboards Class Resources</p>"},{"location":"Lectures/Week13/Lecture/#ArcGIS-Storymaps","title":"ArcGIS Storymaps\u00b6","text":""},{"location":"Lectures/Week13/Lecture/#Learning-Objectives","title":"Learning Objectives\u00b6","text":"<ul> <li>Understand what ArcGIS StoryMaps are and their significance in storytelling and communication.</li> <li>Explore the components and structure of a StoryMap.</li> <li>Learn how to create a basic StoryMap.</li> <li>Recognize best practices for designing engaging and effective StoryMaps.</li> </ul>"},{"location":"Lectures/Week13/Lecture/#Introduction-to-ArcGIS-StoryMaps","title":"Introduction to ArcGIS StoryMaps\u00b6","text":"<ul> <li>What are StoryMaps?<ul> <li>A digital platform for combining maps, text, images, and multimedia into a narrative.</li> <li>Use cases: historical analysis, project presentations, urban development plans, environmental studies.</li> </ul> </li> <li>Why Use StoryMaps?<ul> <li>Engages audiences with interactive and visually compelling narratives.</li> <li>Communicates complex geospatial data effectively.</li> <li>Accessible and shareable on various platforms.</li> </ul> </li> </ul>"},{"location":"Lectures/Week13/Lecture/#Components-of-a-StoryMap","title":"Components of a StoryMap\u00b6","text":"<ul> <li>Overview of key elements:<ul> <li>Title and Introduction: Hooks the audience.</li> <li>Narrative Sections: Text for storytelling.</li> <li>Interactive Maps: Engages the audience with geospatial data.</li> <li>Media (Images, Videos, etc.): Enhances the story visually.</li> <li>Call-to-Actions (Buttons/Links): Guides audience interactions.</li> <li>Credits and Sources: Maintains credibility.</li> </ul> </li> </ul>"},{"location":"Lectures/Week13/Lecture/#Demonstration:-Creating-a-Basic-StoryMap","title":"Demonstration: Creating a Basic StoryMap\u00b6","text":"<p>Step 1: Access ArcGIS StoryMaps.</p> <p>Navigate to the ArcGIS Online account. Select \"StoryMaps\" from the app options.</p> <p>Step 2: Create a New StoryMap.</p> <p>Add a title, subtitle, and description. Choose a pre-defined theme (e.g., modern, classic).</p> <p>Step 3: Add Content.</p> <p>Text Blocks: Write an introductory narrative. Maps: Embed a web map or upload data to create a custom map. Media: Upload images or embed videos to complement the story.</p> <p>Step 4: Customize and Publish.</p> <p>Use customization tools to adjust layout and design. Publish and share the link for feedback or presentation.</p>"},{"location":"Lectures/Week13/Lecture/#Online-Learning-Resources","title":"Online Learning Resources\u00b6","text":"<p>ArcGIS StoryMaps gallery</p>"},{"location":"Lectures/Week13/Lecture/#Esri-StoryMaps-Competition","title":"Esri StoryMaps Competition\u00b6","text":"<p>2024 ArcGIS StoryMaps Competition: Deadline Dec 6</p>"},{"location":"Lectures/Week13/Lecture/#Introduction-to-ArcGIS-Hub","title":"Introduction to ArcGIS Hub\u00b6","text":""},{"location":"Lectures/Week13/Lecture/#Key-Features-of-ArcGIS-Hub","title":"Key Features of ArcGIS Hub\u00b6","text":"<ol> <li>Hub Sites:<ul> <li>Public-facing websites to share projects, maps, and resources.</li> <li>Customizable for specific themes or initiatives.</li> </ul> </li> <li>Open Data:<ul> <li>Share datasets publicly for research, policy, or community use.</li> <li>API support for developers to integrate data.</li> </ul> </li> <li>Community Engagement:<ul> <li>Integrate surveys, polls, or events to gather public feedback.</li> <li>Share dashboards with live data updates.</li> </ul> </li> <li>Initiatives:<ul> <li>Organize content and data around specific goals (e.g., reducing carbon emissions, improving public transport).</li> </ul> </li> <li>Collaboration Tools:<ul> <li>Invite team members or public contributors to collaborate.</li> </ul> </li> </ol>"},{"location":"Lectures/Week13/Lecture/#Example-of-ArcGIS-Hub","title":"Example of ArcGIS Hub\u00b6","text":"<p>City of Lewisville Open Data</p> <p>City of Dallas Open Data</p> <p>Boston Open Data</p>"},{"location":"Lectures/Week13/Lecture/#Online-Resources","title":"Online Resources\u00b6","text":"<p>ArcGIS Hub Gallery</p> <p>ArcGIS Hub</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/","title":"Week09 Leafmap Instructor","text":"Week 9: Leafmap in Python       <p>Leafmap is a powerful Python package designed for creating, analyzing, and visualizing geospatial data in an interactive way using web maps. Built on top of libraries like folium and ipyleaflet, leafmap simplifies geospatial workflows by integrating with popular Python tools such as pandas and geopandas. It's particularly useful for those who want to visualize geospatial data interactively without needing extensive knowledge of JavaScript.</p> In\u00a0[\u00a0]: Copied! <pre>!pip install leafmap rasterio\n!pip install git+https://github.com/banesullivan/localtileserver\n</pre> !pip install leafmap rasterio !pip install git+https://github.com/banesullivan/localtileserver In\u00a0[\u00a0]: Copied! <pre>import leafmap\nimport rasterio\n</pre> import leafmap import rasterio In\u00a0[\u00a0]: Copied! <pre># from google.colab import drive\n# drive.mount('/content/drive')\n</pre> # from google.colab import drive # drive.mount('/content/drive') In\u00a0[\u00a0]: Copied! <pre>in_map = leafmap.Map(center = [40, -95], zoom = 5)\nin_map\n</pre> in_map = leafmap.Map(center = [40, -95], zoom = 5) in_map In\u00a0[\u00a0]: Copied! <pre>map_control = leafmap.Map(center = [40, -95], zoom = 5, zoom_control = False)\nmap_control\n</pre> map_control = leafmap.Map(center = [40, -95], zoom = 5, zoom_control = False) map_control In\u00a0[\u00a0]: Copied! <pre>map_lyr = leafmap.Map(center = [40, -95], zoom = 5, zoom_control = False)\nmap_lyr\n</pre> map_lyr = leafmap.Map(center = [40, -95], zoom = 5, zoom_control = False) map_lyr  In\u00a0[\u00a0]: Copied! <pre>map_lyr.layers\n</pre> map_lyr.layers In\u00a0[\u00a0]: Copied! <pre>map_lyr.remove(map_lyr.layers[-1])\nmap_lyr\n</pre> map_lyr.remove(map_lyr.layers[-1]) map_lyr In\u00a0[\u00a0]: Copied! <pre>wms_lyr = leafmap.Map(center=[40, -100], zoom=4)\nurl = \"https://www.mrlc.gov/geoserver/NLCD_Canopy/wms?SERVICE=WMS&amp;REQUEST=GetCapabilities\"\nwms_lyr.add_wms_layer(\n    url=url,\n    layers=\"NLCD_Canopy\",\n    name=\"NLCD_Canopy\",\n    attribution=\"USGS\",\n    format=\"image/png\",\n)\nwms_lyr\n</pre> wms_lyr = leafmap.Map(center=[40, -100], zoom=4) url = \"https://www.mrlc.gov/geoserver/NLCD_Canopy/wms?SERVICE=WMS&amp;REQUEST=GetCapabilities\" wms_lyr.add_wms_layer(     url=url,     layers=\"NLCD_Canopy\",     name=\"NLCD_Canopy\",     attribution=\"USGS\",     format=\"image/png\", ) wms_lyr In\u00a0[\u00a0]: Copied! <pre>legend_dict = {\n    \"Canopy\": \"006400\",\n}\n</pre> legend_dict = {     \"Canopy\": \"006400\", } In\u00a0[\u00a0]: Copied! <pre>wms_lyr.add_legend(\n    title=\"NLCD_Canopy\", legend_dict=legend_dict, position = 'bottomleft')\nwms_lyr\n</pre> wms_lyr.add_legend(     title=\"NLCD_Canopy\", legend_dict=legend_dict, position = 'bottomleft') wms_lyr In\u00a0[\u00a0]: Copied! <pre>legends = leafmap.builtin_legends\nfor legend in legends:\n    print(legend)\n</pre> legends = leafmap.builtin_legends for legend in legends:     print(legend) <p>NLCD:Nation Land Cover Database</p> In\u00a0[\u00a0]: Copied! <pre>nlcd_cover = leafmap.Map()\nurl = \"https://www.mrlc.gov/geoserver/mrlc_display/NLCD_2016_Land_Cover_L48/wms?\"\nnlcd_cover.add_wms_layer(\n    url,\n    layers=\"NLCD_2016_Land_Cover_L48\",\n    name=\"NLCD 2016 CONUS Land Cover\",\n    format=\"image/png\",\n    transparent=True,\n)\nnlcd_cover.add_legend(builtin_legend=\"NLCD\")\n\nnlcd_cover\n</pre> nlcd_cover = leafmap.Map() url = \"https://www.mrlc.gov/geoserver/mrlc_display/NLCD_2016_Land_Cover_L48/wms?\" nlcd_cover.add_wms_layer(     url,     layers=\"NLCD_2016_Land_Cover_L48\",     name=\"NLCD 2016 CONUS Land Cover\",     format=\"image/png\",     transparent=True, ) nlcd_cover.add_legend(builtin_legend=\"NLCD\")  nlcd_cover In\u00a0[\u00a0]: Copied! <pre>cog_lyr = leafmap.Map()\nurl = \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-09-27/1030010105AA2600-visual.tif\"\ncog_lyr.add_cog_layer(url, name=\"Hurricane Helene\")\ncog_lyr\n</pre> cog_lyr = leafmap.Map() url = \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-09-27/1030010105AA2600-visual.tif\" cog_lyr.add_cog_layer(url, name=\"Hurricane Helene\") cog_lyr In\u00a0[\u00a0]: Copied! <pre>url2 = \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-09-27/1030010105AA2600-visual.tif\"\ncog_lyr.add_cog_layer(url2, name=\"Statewide Agriculture\")\ncog_lyr\n</pre> url2 = \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-09-27/1030010105AA2600-visual.tif\" cog_lyr.add_cog_layer(url2, name=\"Statewide Agriculture\") cog_lyr In\u00a0[\u00a0]: Copied! <pre>urls = [\n    \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-09-27/1030010105AA2600-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-03-29/105001003A08F100-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233022/2024-09-27/1030010105AA2600-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233022/2024-03-29/105001003A08F100-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233021/2024-09-27/1030010105AA2600-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233021/2024-03-29/105001003A08F100-visual.tif\"\n]\n\ncog_lyr = leafmap.Map()\n\nfor i in urls:\n  cog_lyr.add_cog_layer(i)\ncog_lyr\n</pre> urls = [     \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-09-27/1030010105AA2600-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-03-29/105001003A08F100-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233022/2024-09-27/1030010105AA2600-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233022/2024-03-29/105001003A08F100-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233021/2024-09-27/1030010105AA2600-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233021/2024-03-29/105001003A08F100-visual.tif\" ]  cog_lyr = leafmap.Map()  for i in urls:   cog_lyr.add_cog_layer(i) cog_lyr In\u00a0[\u00a0]: Copied! <pre>landsat = 'dem.tif'\nlandsat_url = \"https://open.gishub.org/data/raster/dem.tif\"\nleafmap.download_file(url=landsat_url, output=landsat, overwrite=True)\n</pre> landsat = 'dem.tif' landsat_url = \"https://open.gishub.org/data/raster/dem.tif\" leafmap.download_file(url=landsat_url, output=landsat, overwrite=True) In\u00a0[\u00a0]: Copied! <pre>raster_lyr = leafmap.Map()\nraster_lyr.add_raster(landsat, colormap=\"terrain\", layer_name=\"DEM\")\nraster_lyr\n</pre> raster_lyr = leafmap.Map() raster_lyr.add_raster(landsat, colormap=\"terrain\", layer_name=\"DEM\") raster_lyr <p>You need to specify left layer and right layer. The layer instance can be the built-in basemap, an HTTP URL to a Cloud Optimized GeoTIFF, or a folium TileLayer instance.</p> In\u00a0[\u00a0]: Copied! <pre>leafmap.basemaps.keys()\n</pre> leafmap.basemaps.keys() In\u00a0[\u00a0]: Copied! <pre>split_landcover = leafmap.split_map(\n    left_layer=\"NLCD 2001 CONUS Land Cover\",\n    right_layer=\"NLCD 2021 CONUS Land Cover\",\n    left_label=\"2001\",\n    right_label=\"2021\",\n    center=[32.78, -96.80],\n    zoom=9\n)\n\nsplit_landcover.add_legend( builtin_legend=\"NLCD\")\n\nsplit_landcover\n</pre> split_landcover = leafmap.split_map(     left_layer=\"NLCD 2001 CONUS Land Cover\",     right_layer=\"NLCD 2021 CONUS Land Cover\",     left_label=\"2001\",     right_label=\"2021\",     center=[32.78, -96.80],     zoom=9 )  split_landcover.add_legend( builtin_legend=\"NLCD\")  split_landcover In\u00a0[\u00a0]: Copied! <pre>m = leafmap.Map(height=600, center=[39.4948, -108.5492], zoom=12)\nurl = \"https://github.com/opengeos/data/releases/download/raster/Libya-2023-07-01.tif\"\nurl2 = \"https://github.com/opengeos/data/releases/download/raster/Libya-2023-09-13.tif\"\nm.split_map(url, url2)\nm\n</pre> m = leafmap.Map(height=600, center=[39.4948, -108.5492], zoom=12) url = \"https://github.com/opengeos/data/releases/download/raster/Libya-2023-07-01.tif\" url2 = \"https://github.com/opengeos/data/releases/download/raster/Libya-2023-09-13.tif\" m.split_map(url, url2) m In\u00a0[\u00a0]: Copied! <pre>import folium\nimport leafmap.foliumap as leafmap_folium\n</pre> import folium import leafmap.foliumap as leafmap_folium In\u00a0[\u00a0]: Copied! <pre>m = leafmap_folium.Map(center=[40, -100], zoom=4)\n\nurl1 = \"https://www.mrlc.gov/geoserver/mrlc_display/NLCD_2021_Impervious_L48/wms?\"\nurl2 = \"https://www.mrlc.gov/geoserver/mrlc_display/NLCD_2001_Impervious_L48/wms?\"\n\nleft_layer = folium.WmsTileLayer(\n    url=url1,\n    layers=\"NLCD_2021_Impervious_L48\",\n    name=\"NLCD 2021\",\n    attr=\"MRLC\",\n    fmt=\"image/png\",\n    transparent=True,\n)\nright_layer = folium.WmsTileLayer(\n    url=url2,\n    layers=\"NLCD_2001_Impervious_L48\",\n    name=\"NLCD 2001\",\n    attr=\"MRLC\",\n    fmt=\"image/png\",\n    transparent=True,\n)\n\nleft_layer\nm.split_map(left_layer, right_layer)\nm\n</pre> m = leafmap_folium.Map(center=[40, -100], zoom=4)  url1 = \"https://www.mrlc.gov/geoserver/mrlc_display/NLCD_2021_Impervious_L48/wms?\" url2 = \"https://www.mrlc.gov/geoserver/mrlc_display/NLCD_2001_Impervious_L48/wms?\"  left_layer = folium.WmsTileLayer(     url=url1,     layers=\"NLCD_2021_Impervious_L48\",     name=\"NLCD 2021\",     attr=\"MRLC\",     fmt=\"image/png\",     transparent=True, ) right_layer = folium.WmsTileLayer(     url=url2,     layers=\"NLCD_2001_Impervious_L48\",     name=\"NLCD 2001\",     attr=\"MRLC\",     fmt=\"image/png\",     transparent=True, )  left_layer m.split_map(left_layer, right_layer) m In\u00a0[\u00a0]: Copied! <pre>%pip install \"leafmap[maplibre]\"\n</pre> %pip install \"leafmap[maplibre]\" <p>Set up the API key from MapTiler in Google secret. Once you have the API key, you can access the MapLibre</p> In\u00a0[\u00a0]: Copied! <pre>import leafmap\nimport os\nimport leafmap.maplibregl as leafmap_libre\n</pre> import leafmap import os import leafmap.maplibregl as leafmap_libre <p>Documentation about maplibregl module in leafmap</p> In\u00a0[\u00a0]: Copied! <pre>m = leafmap_libre.Map()\nm\n</pre> m = leafmap_libre.Map() m In\u00a0[\u00a0]: Copied! <pre>m.layer_dict\n</pre> m.layer_dict In\u00a0[\u00a0]: Copied! <pre>style = {\n    \"version\": 8,\n    \"sources\": {\n        \"osm\": {\n            \"type\": \"raster\",\n            \"tiles\": [\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"],\n            \"tileSize\": 256,\n            \"attribution\": \"\u00a9 OpenStreetMap Contributors\",\n            \"maxzoom\": 19,\n        },\n        \"terrainSource\": {\n            \"type\": \"raster-dem\",\n            \"url\": \"https://demotiles.maplibre.org/terrain-tiles/tiles.json\",\n            \"tileSize\": 256,\n        },\n        \"hillshadeSource\": {\n            \"type\": \"raster-dem\",\n            \"url\": \"https://demotiles.maplibre.org/terrain-tiles/tiles.json\",\n            \"tileSize\": 256,\n        },\n    },\n    \"layers\": [\n        {\"id\": \"osm\",\n         \"type\": \"raster\",\n         \"source\": \"osm\"},\n        {\n            \"id\": \"hills\",\n            \"type\": \"hillshade\",\n            \"source\": \"hillshadeSource\",\n            \"layout\": {\"visibility\": \"visible\"},\n            \"paint\": {\"hillshade-shadow-color\": \"#473B24\"},\n        },\n    ],\n    \"terrain\": {\"source\": \"terrainSource\", \"exaggeration\": 1},\n}\n\nm = leafmap_libre.Map(center=[11.39085, 47.27574], zoom=12, pitch=50, style=style)\nm.add_layer_control(bg_layers=True)\nm\n</pre> style = {     \"version\": 8,     \"sources\": {         \"osm\": {             \"type\": \"raster\",             \"tiles\": [\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"],             \"tileSize\": 256,             \"attribution\": \"\u00a9 OpenStreetMap Contributors\",             \"maxzoom\": 19,         },         \"terrainSource\": {             \"type\": \"raster-dem\",             \"url\": \"https://demotiles.maplibre.org/terrain-tiles/tiles.json\",             \"tileSize\": 256,         },         \"hillshadeSource\": {             \"type\": \"raster-dem\",             \"url\": \"https://demotiles.maplibre.org/terrain-tiles/tiles.json\",             \"tileSize\": 256,         },     },     \"layers\": [         {\"id\": \"osm\",          \"type\": \"raster\",          \"source\": \"osm\"},         {             \"id\": \"hills\",             \"type\": \"hillshade\",             \"source\": \"hillshadeSource\",             \"layout\": {\"visibility\": \"visible\"},             \"paint\": {\"hillshade-shadow-color\": \"#473B24\"},         },     ],     \"terrain\": {\"source\": \"terrainSource\", \"exaggeration\": 1}, }  m = leafmap_libre.Map(center=[11.39085, 47.27574], zoom=12, pitch=50, style=style) m.add_layer_control(bg_layers=True) m <ol> <li>Set up account in Maptile</li> <li>Get API keys</li> </ol> In\u00a0[\u00a0]: Copied! <pre>MAPTILER_KEY = leafmap_libre.get_api_key(\"maplibre\")\nMAPTILER_KEY\n</pre> MAPTILER_KEY = leafmap_libre.get_api_key(\"maplibre\") MAPTILER_KEY In\u00a0[\u00a0]: Copied! <pre>m = leafmap_libre.Map(\n    center=[-74.0066, 40.7135], zoom=12, pitch=45, bearing=-17, style=\"basic-v2\"\n)\nm.add_basemap(\"Esri.WorldImagery\", visible=False)\nsource = {\n    \"url\": f\"https://api.maptiler.com/tiles/v3/tiles.json?key={MAPTILER_KEY}\",\n    \"type\": \"vector\",\n}\n\nlayer = {\n    \"id\": \"3d-buildings\",\n    \"source\": \"openmaptiles\",\n    \"source-layer\": \"building\",\n    \"type\": \"fill-extrusion\",\n    \"min-zoom\": 15,\n    \"paint\": {\n        \"fill-extrusion-color\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"get\", \"render_height\"],\n            0,\n            \"lightgray\",\n            200,\n            \"royalblue\",\n            400,\n            \"lightblue\",\n        ],\n        \"fill-extrusion-height\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"zoom\"],\n            15,\n            0,\n            16,\n            [\"get\", \"render_height\"],\n        ],\n        \"fill-extrusion-base\": [\n            \"case\",\n            [\"&gt;=\", [\"get\", \"zoom\"], 16],\n            [\"get\", \"render_min_height\"],\n            0,\n        ],\n    },\n}\nm.add_source(\"openmaptiles\", source)\nm.add_layer(layer)\nm.add_layer_control()\nm\n</pre> m = leafmap_libre.Map(     center=[-74.0066, 40.7135], zoom=12, pitch=45, bearing=-17, style=\"basic-v2\" ) m.add_basemap(\"Esri.WorldImagery\", visible=False) source = {     \"url\": f\"https://api.maptiler.com/tiles/v3/tiles.json?key={MAPTILER_KEY}\",     \"type\": \"vector\", }  layer = {     \"id\": \"3d-buildings\",     \"source\": \"openmaptiles\",     \"source-layer\": \"building\",     \"type\": \"fill-extrusion\",     \"min-zoom\": 15,     \"paint\": {         \"fill-extrusion-color\": [             \"interpolate\",             [\"linear\"],             [\"get\", \"render_height\"],             0,             \"lightgray\",             200,             \"royalblue\",             400,             \"lightblue\",         ],         \"fill-extrusion-height\": [             \"interpolate\",             [\"linear\"],             [\"zoom\"],             15,             0,             16,             [\"get\", \"render_height\"],         ],         \"fill-extrusion-base\": [             \"case\",             [\"&gt;=\", [\"get\", \"zoom\"], 16],             [\"get\", \"render_min_height\"],             0,         ],     }, } m.add_source(\"openmaptiles\", source) m.add_layer(layer) m.add_layer_control() m In\u00a0[\u00a0]: Copied! <pre>m.to_html(\"3d_building.html\", title=\"Awesome 3D Map\", width=\"100%\", height=\"100%\")\nm\n</pre> m.to_html(\"3d_building.html\", title=\"Awesome 3D Map\", width=\"100%\", height=\"100%\") m In\u00a0[\u00a0]: Copied! <pre>os.environ[\"MAPTILER_KEY\"] = \"E87yvJ1wxQtdYyp7lgrV\"\nos.environ[\"MAPTILER_KEY_PUBLIC\"] = \"OxxoV2vq1TEV7OQ8eSZD\"\n</pre> os.environ[\"MAPTILER_KEY\"] = \"E87yvJ1wxQtdYyp7lgrV\" os.environ[\"MAPTILER_KEY_PUBLIC\"] = \"OxxoV2vq1TEV7OQ8eSZD\" In\u00a0[\u00a0]: Copied! <pre>m = leafmap_libre.Map(\n    center=[-122.19861, 46.21168], zoom=13, pitch=60, bearing=150, style=\"3d-terrain\"\n)\nm.add_layer_control(bg_layers=True)\nm.to_html(\"terrain.html\", title=\"Awesome 3D Map\", width=\"100%\", height=\"100%\", replace_key=True)\nm\n</pre> m = leafmap_libre.Map(     center=[-122.19861, 46.21168], zoom=13, pitch=60, bearing=150, style=\"3d-terrain\" ) m.add_layer_control(bg_layers=True) m.to_html(\"terrain.html\", title=\"Awesome 3D Map\", width=\"100%\", height=\"100%\", replace_key=True) m"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Intorduction-of-Leafmap","title":"Intorduction of Leafmap\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#1.-Key-features-of-Leafmap","title":"1. Key features of Leafmap\u00b6","text":"<ul> <li>Creating an interactive map with just one line of code</li> <li>Adding XYZ, WMS, and vector tile services</li> <li>Displaying vector data</li> <li>...</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#2.-Install-leafmap-and-relevant-packages","title":"2. Install leafmap and relevant packages\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#3.-Load-basemap","title":"3. Load basemap\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#3.1-Creating-interactive-maps","title":"3.1 Creating interactive maps\u00b6","text":"<ul> <li>Change basemap without codding</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Exercise-1:-Customize-map's-center-and-zoom-level","title":"Exercise 1: Customize map's center and zoom level\u00b6","text":"<ul> <li>You can customize maps's center with a tuple or list of latitude and longitude, zoom is an integer</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Adding-or-Removing-Controls","title":"Adding or Removing Controls\u00b6","text":"<p>By default, the map comes with controls like zoom, fullscreen, scale, attribution, and a toolbar. You can enable or disable these controls by setting parameters such as <code>zoom_control</code>, <code>fullscreen_control</code>, <code>scale_control</code>, <code>attribution_control</code>, and <code>toolbar_control</code> to either True or False.</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Working-with-Layers","title":"Working with Layers\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Exercise-2:-Remove-layers","title":"Exercise 2: Remove layers\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Visualizating-web-based-raster-data","title":"Visualizating web-based raster data\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Adding-a-WMS-Tile-Layer-and-custimized-legend-to-the-map","title":"Adding a WMS Tile Layer and custimized legend to the map\u00b6","text":"<p>Web Map Service (WMS) layers can be added using the add_wms_layer() method. The following code adds a WMS layer from the USGS, centered on the U.S. with a zoom level of 4:</p> <ul> <li>You can find the layers' information from Layer-name property in WMS</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Add-a-custom-legend","title":"Add a custom legend\u00b6","text":"<ul> <li>Define legend dictionary</li> </ul> <p>Key is the label and value is the color</p> <p>Each color is represented by a six-digit code that follows this pattern: #RRGGBB, where:</p> <p>RR is the red component GG is the green component BB is the blue component</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Adding-a-WMS-Tile-Layer-and-built-in-legend-to-the-map","title":"Adding a WMS Tile Layer and built-in legend to the map\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Adding-a-Cloud-optimzied-GeoTIFF-(COG)","title":"Adding a Cloud optimzied GeoTIFF (COG)\u00b6","text":"<p>What is Cloud Optimized GeoTIFFs</p> <p>Publicly available Cloud Optimized GeoTIFFs:</p> <ul> <li>https://www.maxar.com/open-data</li> <li>https://earthexplorer.usgs.gov/</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Exerciese:-Get-COG-link-and-load-in-map","title":"Exerciese: Get COG link and load in map\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Adding-second-COGs","title":"Adding second COGs\u00b6","text":"<p>You can add multiple COGS to the same map.</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Adding-multiple-COGs","title":"Adding multiple COGs\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Visualizing-Local-Raster","title":"Visualizing Local Raster\u00b6","text":"<p>Download a sample GeoTIFF data</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Creating-a-Split-Map-for-Comparison","title":"Creating a Split Map for Comparison\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Using-basemap","title":"Using basemap\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Using-Cloud-Optimized-GeoTIFF-(COG)","title":"Using Cloud Optimized GeoTIFF (COG)\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#Using-folium-TileLayer","title":"Using folium TileLayer\u00b6","text":"<p>Data Source: MRLC</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#3D-Visualization","title":"3D Visualization\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#3D-Building","title":"3D Building\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#To-html","title":"To html\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#3D-Building-to-Html-with-key","title":"3D Building to Html with key\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Instructor/#3D-Terrain-to-Html-with-restricted-key","title":"3D Terrain to Html with restricted key\u00b6","text":"<ul> <li>Set up the allowed HTTP Origins for yoru key</li> <li>You can use github domain as the allowed HTTP Origins</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/","title":"Week 9 Leafmap","text":"&amp;nbsp &amp;nbsp  <p>Leafmap is a powerful Python package designed for creating, analyzing, and visualizing geospatial data in an interactive way using web maps. Built on top of libraries like folium and ipyleaflet, leafmap simplifies geospatial workflows by integrating with popular Python tools such as pandas and geopandas. It's particularly useful for those who want to visualize geospatial data interactively without needing extensive knowledge of JavaScript.</p> In\u00a0[\u00a0]: Copied! <pre>!pip install leafmap rasterio\n!pip install git+https://github.com/banesullivan/localtileserver\n</pre> !pip install leafmap rasterio !pip install git+https://github.com/banesullivan/localtileserver In\u00a0[\u00a0]: Copied! <pre>import leafmap\nimport rasterio\n</pre> import leafmap import rasterio In\u00a0[\u00a0]: Copied! <pre># from google.colab import drive\n# drive.mount('/content/drive')\n</pre> # from google.colab import drive # drive.mount('/content/drive') In\u00a0[\u00a0]: Copied! <pre># Set up center level and zoom level\nin_map = leafmap.Map(center = , zoom = )\nin_map\n</pre> # Set up center level and zoom level in_map = leafmap.Map(center = , zoom = ) in_map In\u00a0[\u00a0]: Copied! <pre># Set up False to zoom_control\nmap_control = leafmap.Map(center = [40, -95], zoom = 5, )\nmap_control\n</pre> # Set up False to zoom_control map_control = leafmap.Map(center = [40, -95], zoom = 5, ) map_control In\u00a0[\u00a0]: Copied! <pre>map_lyr = leafmap.Map(center = [40, -95], zoom = 5, zoom_control = False)\nmap_lyr\n</pre> map_lyr = leafmap.Map(center = [40, -95], zoom = 5, zoom_control = False) map_lyr  In\u00a0[\u00a0]: Copied! <pre>map_lyr.layers\n</pre> map_lyr.layers In\u00a0[\u00a0]: Copied! <pre>map_lyr.remove(map_lyr.layers[-1])\nmap_lyr\n</pre> map_lyr.remove(map_lyr.layers[-1]) map_lyr In\u00a0[\u00a0]: Copied! <pre># Get url from USGS WMS Service\n# Set up the layers name (Get layers from data)\n# Set up format\n\nwms_lyr = leafmap.Map(center=[40, -100], zoom=4)\nurl = \"\"\nwms_lyr.add_wms_layer(\n    url=url,\n    layers=\"\",\n    name=\"NLCD_Canopy\",\n    attribution=\"USGS\",\n    format=\"\",\n)\nwms_lyr\n</pre> # Get url from USGS WMS Service # Set up the layers name (Get layers from data) # Set up format  wms_lyr = leafmap.Map(center=[40, -100], zoom=4) url = \"\" wms_lyr.add_wms_layer(     url=url,     layers=\"\",     name=\"NLCD_Canopy\",     attribution=\"USGS\",     format=\"\", ) wms_lyr In\u00a0[\u00a0]: Copied! <pre># Set up key as classification: Canopy\n# Set up value as color: \"006400\"\n\nlegend_dict = {\n\n}\n</pre> # Set up key as classification: Canopy # Set up value as color: \"006400\"  legend_dict = {  } In\u00a0[\u00a0]: Copied! <pre>wms_lyr.add_legend(\n    title=\"NLCD_Canopy\", legend_dict=legend_dict, position = 'bottomleft')\nwms_lyr\n</pre> wms_lyr.add_legend(     title=\"NLCD_Canopy\", legend_dict=legend_dict, position = 'bottomleft') wms_lyr In\u00a0[\u00a0]: Copied! <pre>legends = leafmap.builtin_legends\nfor legend in legends:\n    print(legend)\n</pre> legends = leafmap.builtin_legends for legend in legends:     print(legend) <p>NLCD:Nation Land Cover Database</p> In\u00a0[\u00a0]: Copied! <pre># Get URL of NLCD from MRLC\n# Set up layers\n\nnlcd_cover = leafmap.Map()\nurl = \"\"\nnlcd_cover.add_wms_layer(\n    url,\n    layers=\"\",\n    name=\"NLCD 2016 CONUS Land Cover\",\n    format=\"image/png\",\n    transparent=True,\n)\nnlcd_cover.add_legend(builtin_legend=\"NLCD\")\n\nnlcd_cover\n</pre> # Get URL of NLCD from MRLC # Set up layers  nlcd_cover = leafmap.Map() url = \"\" nlcd_cover.add_wms_layer(     url,     layers=\"\",     name=\"NLCD 2016 CONUS Land Cover\",     format=\"image/png\",     transparent=True, ) nlcd_cover.add_legend(builtin_legend=\"NLCD\")  nlcd_cover In\u00a0[\u00a0]: Copied! <pre># Get URL of COG from maxar\n\ncog_lyr = leafmap.Map()\nurl = \"\"\ncog_lyr.add_cog_layer(url, name=\"Hurricane Helene\")\ncog_lyr\n</pre> # Get URL of COG from maxar  cog_lyr = leafmap.Map() url = \"\" cog_lyr.add_cog_layer(url, name=\"Hurricane Helene\") cog_lyr In\u00a0[\u00a0]: Copied! <pre># Get URL of second COG from maxar\n\nurl2 = \"\"\ncog_lyr.add_cog_layer(url2, name=\"\")\ncog_lyr\n</pre> # Get URL of second COG from maxar  url2 = \"\" cog_lyr.add_cog_layer(url2, name=\"\") cog_lyr In\u00a0[\u00a0]: Copied! <pre>urls = [\n    \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-09-27/1030010105AA2600-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-03-29/105001003A08F100-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233022/2024-09-27/1030010105AA2600-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233022/2024-03-29/105001003A08F100-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233021/2024-09-27/1030010105AA2600-visual.tif\",\n  \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233021/2024-03-29/105001003A08F100-visual.tif\"\n]\n\ncog_lyr = leafmap.Map()\n\nfor i in urls:\n  cog_lyr.add_cog_layer(i)\ncog_lyr\n</pre> urls = [     \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-09-27/1030010105AA2600-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233023/2024-03-29/105001003A08F100-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233022/2024-09-27/1030010105AA2600-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233022/2024-03-29/105001003A08F100-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233021/2024-09-27/1030010105AA2600-visual.tif\",   \"https://maxar-opendata.s3.us-west-2.amazonaws.com/events/HurricaneHelene-Oct24/ard/17/031313233021/2024-03-29/105001003A08F100-visual.tif\" ]  cog_lyr = leafmap.Map()  for i in urls:   cog_lyr.add_cog_layer(i) cog_lyr In\u00a0[\u00a0]: Copied! <pre># Check data source: https://open.gishub.org/data/raster/dem.tif to under stand how Github host data\n\nlandsat = 'dem.tif'\nlandsat_url = \"\"\nleafmap.download_file(url=landsat_url, output=landsat, overwrite=True)\n</pre> # Check data source: https://open.gishub.org/data/raster/dem.tif to under stand how Github host data  landsat = 'dem.tif' landsat_url = \"\" leafmap.download_file(url=landsat_url, output=landsat, overwrite=True) In\u00a0[\u00a0]: Copied! <pre>raster_lyr = leafmap.Map()\nraster_lyr.add_raster(landsat, colormap=\"terrain\", layer_name=\"DEM\")\nraster_lyr\n</pre> raster_lyr = leafmap.Map() raster_lyr.add_raster(landsat, colormap=\"terrain\", layer_name=\"DEM\") raster_lyr <p>You need to specify left layer and right layer. The layer instance can be the built-in basemap, an HTTP URL to a Cloud Optimized GeoTIFF, or a folium TileLayer instance.</p> In\u00a0[\u00a0]: Copied! <pre>leafmap.basemaps.keys()\n</pre> leafmap.basemaps.keys() In\u00a0[\u00a0]: Copied! <pre># Set up left layer as NLCD 2001 CONUS Land Cover\n# Set up right layer as NLCD 2021 CONUS Land Cover\nsplit_landcover = leafmap.split_map(\n    left_layer=\"\",\n    right_layer=\"\",\n    left_label=\"2001\",\n    right_label=\"2021\",\n    center=[32.78, -96.80],\n    zoom=9\n)\n\n# Get builtin-legend \"NLCD\"\n\nsplit_landcover.add_legend( builtin_legend=\"NLCD\")\n\nsplit_landcover\n</pre> # Set up left layer as NLCD 2001 CONUS Land Cover # Set up right layer as NLCD 2021 CONUS Land Cover split_landcover = leafmap.split_map(     left_layer=\"\",     right_layer=\"\",     left_label=\"2001\",     right_label=\"2021\",     center=[32.78, -96.80],     zoom=9 )  # Get builtin-legend \"NLCD\"  split_landcover.add_legend( builtin_legend=\"NLCD\")  split_landcover In\u00a0[\u00a0]: Copied! <pre># url 1: https://github.com/opengeos/data/releases/download/raster/Libya-2023-07-01.tif\n# url 2: https://github.com/opengeos/data/releases/download/raster/Libya-2023-09-13.tif\n\nm = leafmap.Map(height=600, center=[39.4948, -108.5492], zoom=12)\nurl = \"\"\nurl2 = \"\"\nm.split_map(url, url2)\nm\n</pre> # url 1: https://github.com/opengeos/data/releases/download/raster/Libya-2023-07-01.tif # url 2: https://github.com/opengeos/data/releases/download/raster/Libya-2023-09-13.tif  m = leafmap.Map(height=600, center=[39.4948, -108.5492], zoom=12) url = \"\" url2 = \"\" m.split_map(url, url2) m In\u00a0[\u00a0]: Copied! <pre>import folium\nimport leafmap.foliumap as leafmap_folium\n</pre> import folium import leafmap.foliumap as leafmap_folium In\u00a0[\u00a0]: Copied! <pre># Set up NLCD 2021 Impervious L48 as left layer\n# Set up NLCD 2001 Impervious L48 as left layer\n\nm = leafmap_folium.Map(center=[40, -100], zoom=4)\n\nurl1 = \"\"\nurl2 = \"\"\n\nleft_layer = folium.WmsTileLayer(\n    url=url1,\n    layers=\"\",\n    name=\"NLCD 2021\",\n    attr=\"MRLC\",\n    fmt=\"image/png\",\n    transparent=True,\n)\nright_layer = folium.WmsTileLayer(\n    url=url2,\n    layers=\"\",\n    name=\"NLCD 2001\",\n    attr=\"MRLC\",\n    fmt=\"image/png\",\n    transparent=True,\n)\n\nleft_layer\nm.split_map(left_layer, right_layer)\nm\n</pre> # Set up NLCD 2021 Impervious L48 as left layer # Set up NLCD 2001 Impervious L48 as left layer  m = leafmap_folium.Map(center=[40, -100], zoom=4)  url1 = \"\" url2 = \"\"  left_layer = folium.WmsTileLayer(     url=url1,     layers=\"\",     name=\"NLCD 2021\",     attr=\"MRLC\",     fmt=\"image/png\",     transparent=True, ) right_layer = folium.WmsTileLayer(     url=url2,     layers=\"\",     name=\"NLCD 2001\",     attr=\"MRLC\",     fmt=\"image/png\",     transparent=True, )  left_layer m.split_map(left_layer, right_layer) m <p>Set up the API key from MapTiler in Google secret. Once you have the API key, you can access the MapLibre</p> In\u00a0[\u00a0]: Copied! <pre>%pip install \"leafmap[maplibre]\"\n</pre> %pip install \"leafmap[maplibre]\" In\u00a0[2]: Copied! <pre>import leafmap\nimport os\nimport leafmap.maplibregl as leafmap_libre\n</pre> import leafmap import os import leafmap.maplibregl as leafmap_libre <p>Documentation about maplibregl module in leafmap</p> In\u00a0[\u00a0]: Copied! <pre>m = leafmap_libre.Map()\nm\n</pre> m = leafmap_libre.Map() m <p>Documentation about MapLibre Style</p> In\u00a0[\u00a0]: Copied! <pre>m.layer_dict\n</pre> m.layer_dict In\u00a0[\u00a0]: Copied! <pre>style = {\n    \"version\": 8,\n    \"sources\": {\n        \"osm\": {\n            \"type\": \"raster\",\n            \"tiles\": [\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"],\n            \"tileSize\": 256,\n            \"attribution\": \"\u00a9 OpenStreetMap Contributors\",\n            \"maxzoom\": 19,\n        },\n        \"terrainSource\": {\n            \"type\": \"raster-dem\",\n            \"url\": \"https://demotiles.maplibre.org/terrain-tiles/tiles.json\",\n            \"tileSize\": 256,\n        },\n        \"hillshadeSource\": {\n            \"type\": \"raster-dem\",\n            \"url\": \"https://demotiles.maplibre.org/terrain-tiles/tiles.json\",\n            \"tileSize\": 256,\n        },\n    },\n    \"layers\": [\n        {\"id\": \"osm\", \"type\": \"raster\", \"source\": \"osm\"},\n        {\n            \"id\": \"hills\",\n            \"type\": \"hillshade\",\n            \"source\": \"hillshadeSource\",\n            \"layout\": {\"visibility\": \"visible\"},\n            \"paint\": {\"hillshade-shadow-color\": \"#473B24\"},\n        },\n    ],\n    \"terrain\": {\"source\": \"terrainSource\", \"exaggeration\": 1},\n}\n\nm = leafmap_libre.Map(center=[11.39085, 47.27574], zoom=12, pitch=52, style=style)\nm.add_layer_control(bg_layers=True)\nm\n</pre> style = {     \"version\": 8,     \"sources\": {         \"osm\": {             \"type\": \"raster\",             \"tiles\": [\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"],             \"tileSize\": 256,             \"attribution\": \"\u00a9 OpenStreetMap Contributors\",             \"maxzoom\": 19,         },         \"terrainSource\": {             \"type\": \"raster-dem\",             \"url\": \"https://demotiles.maplibre.org/terrain-tiles/tiles.json\",             \"tileSize\": 256,         },         \"hillshadeSource\": {             \"type\": \"raster-dem\",             \"url\": \"https://demotiles.maplibre.org/terrain-tiles/tiles.json\",             \"tileSize\": 256,         },     },     \"layers\": [         {\"id\": \"osm\", \"type\": \"raster\", \"source\": \"osm\"},         {             \"id\": \"hills\",             \"type\": \"hillshade\",             \"source\": \"hillshadeSource\",             \"layout\": {\"visibility\": \"visible\"},             \"paint\": {\"hillshade-shadow-color\": \"#473B24\"},         },     ],     \"terrain\": {\"source\": \"terrainSource\", \"exaggeration\": 1}, }  m = leafmap_libre.Map(center=[11.39085, 47.27574], zoom=12, pitch=52, style=style) m.add_layer_control(bg_layers=True) m <ol> <li>Set up account in Maptile</li> <li>Get API keys</li> </ol> In\u00a0[\u00a0]: Copied! <pre>MAPTILER_KEY = leafmap_libre.get_api_key(\"maplibre\")\nMAPTILER_KEY\n</pre> MAPTILER_KEY = leafmap_libre.get_api_key(\"maplibre\") MAPTILER_KEY In\u00a0[\u00a0]: Copied! <pre>m = leafmap_libre.Map(\n    center=[-74.0066, 40.7135], zoom=12, pitch=45, bearing=-17, style=\"basic-v2\"\n)\nm.add_basemap(\"Esri.WorldImagery\", visible=False)\nsource = {\n    \"url\": f\"https://api.maptiler.com/tiles/v3/tiles.json?key={MAPTILER_KEY}\",\n    \"type\": \"vector\",\n}\n\nlayer = {\n    \"id\": \"3d-buildings\",\n    \"source\": \"openmaptiles\",\n    \"source-layer\": \"building\",\n    \"type\": \"fill-extrusion\",\n    \"min-zoom\": 15,\n    \"paint\": {\n        \"fill-extrusion-color\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"get\", \"render_height\"],\n            0,\n            \"lightgray\",\n            100,\n            \"royalblue\",\n            400,\n            \"lightblue\",\n        ],\n        \"fill-extrusion-height\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"zoom\"],\n            15,\n            0,\n            16,\n            [\"get\", \"render_height\"],\n        ],\n        \"fill-extrusion-base\": [\n            \"case\",\n            [\"&gt;=\", [\"get\", \"zoom\"], 16],\n            [\"get\", \"render_min_height\"],\n            0,\n        ],\n    },\n}\nm.add_source(\"openmaptiles\", source)\nm.add_layer(layer)\nm.add_layer_control()\nm\n</pre> m = leafmap_libre.Map(     center=[-74.0066, 40.7135], zoom=12, pitch=45, bearing=-17, style=\"basic-v2\" ) m.add_basemap(\"Esri.WorldImagery\", visible=False) source = {     \"url\": f\"https://api.maptiler.com/tiles/v3/tiles.json?key={MAPTILER_KEY}\",     \"type\": \"vector\", }  layer = {     \"id\": \"3d-buildings\",     \"source\": \"openmaptiles\",     \"source-layer\": \"building\",     \"type\": \"fill-extrusion\",     \"min-zoom\": 15,     \"paint\": {         \"fill-extrusion-color\": [             \"interpolate\",             [\"linear\"],             [\"get\", \"render_height\"],             0,             \"lightgray\",             100,             \"royalblue\",             400,             \"lightblue\",         ],         \"fill-extrusion-height\": [             \"interpolate\",             [\"linear\"],             [\"zoom\"],             15,             0,             16,             [\"get\", \"render_height\"],         ],         \"fill-extrusion-base\": [             \"case\",             [\"&gt;=\", [\"get\", \"zoom\"], 16],             [\"get\", \"render_min_height\"],             0,         ],     }, } m.add_source(\"openmaptiles\", source) m.add_layer(layer) m.add_layer_control() m In\u00a0[\u00a0]: Copied! <pre>m.to_html(\"3d_building.html\", title=\"Awesome 3D Map\", width=\"100%\", height=\"100%\")\nm\n</pre> m.to_html(\"3d_building.html\", title=\"Awesome 3D Map\", width=\"100%\", height=\"100%\") m In\u00a0[\u00a0]: Copied! <pre># Set MAPTILER_KEY as the private key\n# MAPTILER_KEY_PUBLIC as the public key\nos.environ[\"MAPTILER_KEY\"] = \"\"\nos.environ[\"MAPTILER_KEY_PUBLIC\"] = \"\"\n</pre> # Set MAPTILER_KEY as the private key # MAPTILER_KEY_PUBLIC as the public key os.environ[\"MAPTILER_KEY\"] = \"\" os.environ[\"MAPTILER_KEY_PUBLIC\"] = \"\" In\u00a0[\u00a0]: Copied! <pre>m = leafmap_libre.Map(\n    center=[-122.19861, 46.21168], zoom=13, pitch=60, bearing=150, style=\"3d-terrain\"\n)\nm.add_layer_control(bg_layers=True)\nm.to_html(\"terrain.html\", title=\"Awesome 3D Map\", width=\"100%\", height=\"100%\", replace_key=True)\nm\n</pre> m = leafmap_libre.Map(     center=[-122.19861, 46.21168], zoom=13, pitch=60, bearing=150, style=\"3d-terrain\" ) m.add_layer_control(bg_layers=True) m.to_html(\"terrain.html\", title=\"Awesome 3D Map\", width=\"100%\", height=\"100%\", replace_key=True) m"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Intorduction-of-Leafmap","title":"Intorduction of Leafmap\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#1.-Key-features-of-Leafmap","title":"1. Key features of Leafmap\u00b6","text":"<ul> <li>Creating an interactive map with just one line of code</li> <li>Adding XYZ, WMS, and vector tile services</li> <li>Displaying vector data</li> <li>...</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#2.-Install-leafmap-and-relevant-packages","title":"2. Install leafmap and relevant packages\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#3.-Load-basemap","title":"3. Load basemap\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#3.1-Creating-interactive-maps","title":"3.1 Creating interactive maps\u00b6","text":"<ul> <li>Change basemap without codding</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Exercise-1:-Customize-map's-center-and-zoom-level","title":"Exercise 1: Customize map's center and zoom level\u00b6","text":"<ul> <li>You can customize maps's center with a tuple or list of latitude and longitude, zoom is an integer</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Adding-or-Removing-Controls","title":"Adding or Removing Controls\u00b6","text":"<p>By default, the map comes with controls like zoom, fullscreen, scale, attribution, and a toolbar. You can enable or disable these controls by setting parameters such as <code>zoom_control</code>, <code>fullscreen_control</code>, <code>scale_control</code>, <code>attribution_control</code>, and <code>toolbar_control</code> to either True or False.</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Working-with-Layers","title":"Working with Layers\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Remove-layers","title":"Remove layers\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Visualizating-web-based-raster-data","title":"Visualizating web-based raster data\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Adding-a-WMS-Tile-Layer-and-custimized-legend-to-the-map","title":"Adding a WMS Tile Layer and custimized legend to the map\u00b6","text":"<p>Web Map Service (WMS) layers can be added using the add_wms_layer() method. The following code adds a WMS layer from the USGS, centered on the U.S. with a zoom level of 4:</p> <ul> <li>You can find the layers' information from Layer-name property in WMS</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Add-a-custom-legend","title":"Add a custom legend\u00b6","text":"<ul> <li>Define legend dictionary</li> </ul> <p>Key is the label and value is the color</p> <p>Each color is represented by a six-digit code that follows this pattern: #RRGGBB, where:</p> <p>RR is the red component GG is the green component BB is the blue component</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Adding-a-WMS-Tile-Layer-and-built-in-legend-to-the-map","title":"Adding a WMS Tile Layer and built-in legend to the map\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Adding-a-Cloud-optimzied-GeoTIFF-(COG)","title":"Adding a Cloud optimzied GeoTIFF (COG)\u00b6","text":"<p>What is Cloud Optimized GeoTIFFs</p> <p>Publicly available Cloud Optimized GeoTIFFs:</p> <ul> <li>https://www.maxar.com/open-data</li> <li>https://earthexplorer.usgs.gov/</li> </ul>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Get-COG-link-and-load-in-map","title":"Get COG link and load in map\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Adding-second-COGs","title":"Adding second COGs\u00b6","text":"<p>You can add multiple COGS to the same map.</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Adding-multiple-COGs","title":"Adding multiple COGs\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Visualizing-Local-Raster","title":"Visualizing Local Raster\u00b6","text":"<p>Download a sample GeoTIFF data</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Creating-a-Split-Map-for-Comparison","title":"Creating a Split Map for Comparison\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Using-basemap","title":"Using basemap\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Using-Cloud-Optimized-GeoTIFF-(COG)","title":"Using Cloud Optimized GeoTIFF (COG)\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#Using-folium-TileLayer","title":"Using folium TileLayer\u00b6","text":"<p>When using Folium within Leafmap, you can easily access Folium's functionality to display basemaps, add markers, and interact with geospatial data without having to write extensive code.</p> <p>Data Source: MRLC</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#3D-Visualization","title":"3D Visualization\u00b6","text":"<p>MapTiler: MapTiler is a powerful tool designed for creating, hosting, and visualizing maps with custom data.</p> <p>MapLibre: MapLibre is an open-source mapping library for web and mobile applications, offering an alternative to proprietary platforms. It provides a JavaScript library for rendering interactive maps using vector tiles and WebGL, enabling highly customizable and performant map experiences.</p>"},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#3D-Building","title":"3D Building\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#To-html","title":"To html\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#3D-Building-to-Html-with-key","title":"3D Building to Html with key\u00b6","text":""},{"location":"Lectures/Week9_PythonLeafmap/Week09_Leafmap_Teaching/#3D-Terrain-to-Html-with-restricted-key","title":"3D Terrain to Html with restricted key\u00b6","text":"<ul> <li>Set up the allowed HTTP Origins for yoru key</li> <li>You can use github domain as the allowed HTTP Origins</li> </ul>"},{"location":"software/Anaconda/","title":"Anaconda","text":"<pre># check python location\nwhere python\n\n# check python version \npython -V\n</pre>"},{"location":"software/Anaconda/#Anaconda","title":"Anaconda\u00b6","text":"<p>Anaconda Distribution is a popular platform that contains</p> <ul> <li>conda - a package and environment manager for your command line interface</li> <li>Over 300 automaticall-installed packages</li> </ul>"},{"location":"software/Anaconda/#Installation","title":"Installation\u00b6","text":"<p>To install Anaconda, download the installer from the Anaconda website. The installer will ask you to accept the license agreement, choose the installation directory.</p>"},{"location":"software/Anaconda/#Usage","title":"Usage\u00b6","text":"<p>After installing Anaconda, you can open the Anaconda Prompt to chekc your python version</p>"},{"location":"software/Anaconda/#check-python","title":"check python\u00b6","text":""},{"location":"software/Anaconda/#list-virtual-environment","title":"list virtual environment\u00b6","text":"<pre>conda env list\n</pre>"},{"location":"software/Anaconda/#Setting-up-virtual-environment","title":"Setting up virtual environment\u00b6","text":""},{"location":"software/Anaconda/#Create-a-virtual-environment","title":"Create a virtual environment\u00b6","text":"<pre>conda create --name name_of_your_virtual_environment\n</pre>"},{"location":"software/Anaconda/#List-virtual-environment","title":"List virtual environment\u00b6","text":"<p>now if you list virgual envionment, you can see the virtual environment that you just create</p> <pre>conda env list\n</pre>"},{"location":"software/Anaconda/#Activate-virtual-environment","title":"Activate virtual environment\u00b6","text":"<p>if you virtual environment named as 'arcgis_python'</p> <pre>activate arcgis_python\n</pre>"},{"location":"software/Anaconda/#Install-packages-(e.g.,-geopandas)","title":"Install packages (e.g., geopandas)\u00b6","text":"<pre>conda install geopandas\n</pre>"},{"location":"software/Error_Message/","title":"Error Message","text":"<p>Running cells with \"...\" requires the ipykernel package  Solution. Install ipykernel package.</p> <ul> <li>using command prompt: conda install ipykernel</li> <li>install in Jupyter</li> </ul>"},{"location":"software/Error_Message/#Error-Message-and-corresponding-solution","title":"Error Message and corresponding solution\u00b6","text":""},{"location":"software/Git/","title":"Git","text":"<p>Git is a distributed version contol system that is widely used to source code management</p> <pre>## replace Nancy and Nancyteach@example.com with your username and email address.  \ngit config --global user.name \"Nancy\"\ngit config --global user.email \"Nancyteach@example.com\"\n</pre> <p>To check your configuration, run the following command:</p> <pre>git config --global --list\n</pre> <ul> <li><ol> <li>Use below command to see which files are causing the push failure</li> </ol> </li> </ul> <pre><code>git lfs migrate info\n</code></pre> <p></p> <ul> <li><ol> <li>Git regular file limits the file size to 100 MB. So pull out the file over than 100 MB from history and store it in Git Large file.</li> </ol> </li> </ul> <pre><code>git lfs migrate import --include=\"*.json\"\ngit lfs migrate import --include=\"*.data\"\n</code></pre> <p></p> <ul> <li><ol> <li>push the change</li> </ol> </li> </ul> <pre><code>git push\n</code></pre> <ol> <li>Using personal access token (PAT) instead of your GitHub password</li> </ol> <ul> <li>generate a personal access token<ul> <li>go to github settings</li> <li>Navigate to Developer settings &gt; Personal access tokens &gt; Tokens (classic) &gt; Generate new token</li> </ul> </li> <li>Update Git remote url</li> </ul> <p>replace the password in your git remote url with the PAT you just generated     - git remote set-url origin https://your-token@github.com/OWNER/REPOSITORY.git     - Owner: your github user name     - REPOSITORY: the name of the repository that you want to update</p> <p>Thanks to Tanner Honnef for providing the solution!</p>"},{"location":"software/Git/#1.-Git-Installation","title":"1. Git Installation\u00b6","text":""},{"location":"software/Git/#Install-Git","title":"Install Git\u00b6","text":"<p>Go to the Git website to download the installer for your operation system</p>"},{"location":"software/Git/#Set-up-your-account-name-and-email-address","title":"Set up your account name and email address\u00b6","text":"<p>You can specify Git configuration settings with the git config command</p> <ul> <li>Setting your username in Git</li> <li>Setting your commit email address</li> </ul>"},{"location":"software/Git/#2.-Update-Remote-Repo","title":"2. Update Remote Repo\u00b6","text":""},{"location":"software/Git/#Clone-a-remote-repository-to-local-computer","title":"Clone a remote repository to local computer\u00b6","text":"<pre>git clone &lt;repository_url&gt;\n</pre>"},{"location":"software/Git/#Update-remote-repository","title":"Update remote repository\u00b6","text":"<p>Push change in local repository to remote repository (* do not include empty files (file size is 0) otherwise cause error) from step 1 - 3</p> <ol> <li>To add files to the staging area, run the following command:</li> </ol> <pre>git add .\n</pre> <ol> <li>To commit the changes, run the following command. Repalce message with your comment to this commit</li> </ol> <pre>git commit -m 'message'\n</pre> <ol> <li>Push the change from local repository to remote repository</li> </ol> <pre>git push\n</pre>"},{"location":"software/Git/#3.-Update-local-repository","title":"3. Update local repository\u00b6","text":"<p>Pull change from remote repository to local repository</p> <pre>git pull\n</pre>"},{"location":"software/Git/#4.-Git-large-files","title":"4. Git large files\u00b6","text":"<p>The image below indicated that file 'docs/app.json' exceeds file size limit, please follow below steps to resolve it.</p> <p></p> <p>The error message: File docs/app.json is 341.24 MB; this exceeds GitHub's file size limit of 100.00 MB</p>"},{"location":"software/Git/#You-may-have-another-error-is-relate-to-URL-returned-error.-Then-please-use-below-command-to-increase-buffer-size","title":"You may have another error is relate to URL returned error. Then please use below command to increase buffer size\u00b6","text":"<pre><code>git config --global http.postBuffer 157286400\n</code></pre>"},{"location":"software/Git/#Authentication-error","title":"Authentication error\u00b6","text":"<p>The error message indicates a permission issue when trying to push to your Github repository.</p>"},{"location":"software/Visual-Studio-Code/","title":"Visual Studio Code","text":""},{"location":"software/Visual-Studio-Code/#Visual-Studio-Code","title":"Visual Studio Code\u00b6","text":"<p>It is a free source code editor developed by Microsoft. It supports a wide range of programming languages and frameworks, offering features like syntax highlighting, debuging, integrated Git Control, and extensions to enhance functionality.</p>"},{"location":"software/Visual-Studio-Code/#Installation","title":"Installation\u00b6","text":""},{"location":"software/Visual-Studio-Code/#Install-Visual-Studio-Code","title":"Install Visual Studio Code\u00b6","text":""},{"location":"software/command_prompt/","title":"Command prompt","text":"<ol> <li>Add path of Anaconda to system environment variable first</li> </ol> <ul> <li>D:\\Anaconda\\condabin (purpose: let system recognize conda)</li> <li>D:\\Anaconda (purpose: set python in Anaconda as default python)</li> </ul> <ol> <li>Open Command Prompt - python</li> <li>After the info about the version cursor transform to &gt;&gt;&gt;</li> <li>Start writing your code</li> <li>Press Enter to get the result</li> </ol>"},{"location":"software/command_prompt/#How-do-I-program-in-Python---Command-Prompt","title":"How do I program in Python - Command Prompt\u00b6","text":""},{"location":"software/command_prompt/#1.-Normal-mode-(Script-Mode)","title":"1. Normal mode (Script Mode)\u00b6","text":""},{"location":"software/command_prompt/#2.-Interactive-mode-(interacting-directly-with-the-interpreter)","title":"2. Interactive mode (interacting directly with the interpreter)\u00b6","text":""}]}